// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails hpcgitlab labs lenovo com loc backend cmd api models deployment details
//
// swagger:model hpcgitlab_labs_lenovo_com_loc_backend_cmd_api_models.DeploymentDetails
type HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails struct {

	// authentication type
	AuthenticationType string `json:"authenticationType,omitempty"`

	// cloud version
	CloudVersion string `json:"cloudVersion,omitempty"`

	// device model
	DeviceModel string `json:"deviceModel,omitempty"`

	// flavor name
	FlavorName string `json:"flavorName,omitempty"`

	// nodes of cluster
	NodesOfCluster int64 `json:"nodesOfCluster,omitempty"`

	// number of sites
	NumberOfSites int64 `json:"numberOfSites,omitempty"`

	// template name
	TemplateName string `json:"templateName,omitempty"`
}

// Validate validates this hpcgitlab labs lenovo com loc backend cmd api models deployment details
func (m *HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hpcgitlab labs lenovo com loc backend cmd api models deployment details based on context it is used
func (m *HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails) UnmarshalBinary(b []byte) error {
	var res HpcgitlabLabsLenovoComLocBackendCmdAPIModelsDeploymentDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
