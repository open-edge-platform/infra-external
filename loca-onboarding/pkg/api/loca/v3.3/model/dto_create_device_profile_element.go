// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DtoCreateDeviceProfileElement dto create device profile element
//
// swagger:model dto.CreateDeviceProfileElement
type DtoCreateDeviceProfileElement struct {

	// bmc
	Bmc map[string]interface{} `json:"bmc,omitempty"`

	// device models
	// Required: true
	DeviceModels []string `json:"deviceModels"`

	// flavor
	// Required: true
	Flavor *string `json:"flavor"`

	// name
	// Required: true
	Name *string `json:"name"`

	// pattern
	Pattern string `json:"pattern,omitempty"`

	// uefi
	Uefi map[string]interface{} `json:"uefi,omitempty"`
}

// Validate validates this dto create device profile element
func (m *DtoCreateDeviceProfileElement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceModels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFlavor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DtoCreateDeviceProfileElement) validateDeviceModels(formats strfmt.Registry) error {

	if err := validate.Required("deviceModels", "body", m.DeviceModels); err != nil {
		return err
	}

	return nil
}

func (m *DtoCreateDeviceProfileElement) validateFlavor(formats strfmt.Registry) error {

	if err := validate.Required("flavor", "body", m.Flavor); err != nil {
		return err
	}

	return nil
}

func (m *DtoCreateDeviceProfileElement) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this dto create device profile element based on context it is used
func (m *DtoCreateDeviceProfileElement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DtoCreateDeviceProfileElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DtoCreateDeviceProfileElement) UnmarshalBinary(b []byte) error {
	var res DtoCreateDeviceProfileElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
