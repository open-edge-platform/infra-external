// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential hpcgitlab labs lenovo com loc backend pkg nexus models vault credential
//
// swagger:model hpcgitlab_labs_lenovo_com_loc_backend_pkg_nexus_models.VaultCredential
type HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential struct {

	// True if only password read from vault  and username provided in clear text
	CtUser bool `json:"ctUser,omitempty"`

	// aka per Credential ValutCreds
	Enable bool `json:"enable,omitempty"`

	// SecretPath provided manually (true) or trough registered Vault Instance SP template (false)
	Manual bool `json:"manual,omitempty"`

	// aka VaultName
	Name string `json:"name,omitempty"`

	// secret path
	SecretPath string `json:"secretPath,omitempty"`
}

// Validate validates this hpcgitlab labs lenovo com loc backend pkg nexus models vault credential
func (m *HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hpcgitlab labs lenovo com loc backend pkg nexus models vault credential based on context it is used
func (m *HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential) UnmarshalBinary(b []byte) error {
	var res HpcgitlabLabsLenovoComLocBackendPkgNexusModelsVaultCredential
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
