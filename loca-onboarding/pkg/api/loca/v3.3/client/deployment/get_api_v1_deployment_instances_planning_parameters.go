// Code generated by go-swagger; DO NOT EDIT.

package deployment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAPIV1DeploymentInstancesPlanningParams creates a new GetAPIV1DeploymentInstancesPlanningParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPIV1DeploymentInstancesPlanningParams() *GetAPIV1DeploymentInstancesPlanningParams {
	return &GetAPIV1DeploymentInstancesPlanningParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIV1DeploymentInstancesPlanningParamsWithTimeout creates a new GetAPIV1DeploymentInstancesPlanningParams object
// with the ability to set a timeout on a request.
func NewGetAPIV1DeploymentInstancesPlanningParamsWithTimeout(timeout time.Duration) *GetAPIV1DeploymentInstancesPlanningParams {
	return &GetAPIV1DeploymentInstancesPlanningParams{
		timeout: timeout,
	}
}

// NewGetAPIV1DeploymentInstancesPlanningParamsWithContext creates a new GetAPIV1DeploymentInstancesPlanningParams object
// with the ability to set a context for a request.
func NewGetAPIV1DeploymentInstancesPlanningParamsWithContext(ctx context.Context) *GetAPIV1DeploymentInstancesPlanningParams {
	return &GetAPIV1DeploymentInstancesPlanningParams{
		Context: ctx,
	}
}

// NewGetAPIV1DeploymentInstancesPlanningParamsWithHTTPClient creates a new GetAPIV1DeploymentInstancesPlanningParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPIV1DeploymentInstancesPlanningParamsWithHTTPClient(client *http.Client) *GetAPIV1DeploymentInstancesPlanningParams {
	return &GetAPIV1DeploymentInstancesPlanningParams{
		HTTPClient: client,
	}
}

/*
GetAPIV1DeploymentInstancesPlanningParams contains all the parameters to send to the API endpoint

	for the get API v1 deployment instances planning operation.

	Typically these are written to a http.Request.
*/
type GetAPIV1DeploymentInstancesPlanningParams struct {

	/* Authorization.

	   Bearer $token
	*/
	Authorization string

	/* FilterContains.

	   Returns data that contains a specific pattern. Within the same filter query, data matches the query if the value of any one of the specified attributes contains any one of the specified patterns. The following example will return data which kind contains Deploy or Expand, or operation contains Deploy or Expand., example: [{"attributes":"kind,operation","values":"Deploy,Expand"}]
	*/
	FilterContains *string

	/* FilterEquals.

	   Returns data that exactly matches a specific pattern. Within the same filter query, data matches the query if the value of any one of the specified attributes exactly matches any one of the specified patterns. The following example will return data which kind exactly matches Deploy or Expand, or operation exactly matches Deploy or Expand, example: [{"attributes":"kind,operation","values":"Deploy,Expand"}]
	*/
	FilterEquals *string

	/* InstanceName.

	   The instance name
	*/
	InstanceName *string

	/* Limit.

	   Maximum number of returns, example: 10

	   Default: 10
	*/
	Limit *int64

	/* Offset.

	   Offset, example: 0
	*/
	Offset *int64

	/* SiteName.

	   The site name
	*/
	SiteName *string

	/* Sort.

	   Returns data that sorted by specific rules. The following example sorts data first by created_time in descending order and then by id in ascending order., example: ["created_time,desc","id,asc"]
	*/
	Sort *string

	/* TemplateName.

	   The template name
	*/
	TemplateName *string

	/* UUID.

	   UUID
	*/
	UUID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API v1 deployment instances planning params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithDefaults() *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API v1 deployment instances planning params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetDefaults() {
	var (
		limitDefault = int64(10)

		offsetDefault = int64(0)
	)

	val := GetAPIV1DeploymentInstancesPlanningParams{
		Limit:  &limitDefault,
		Offset: &offsetDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithTimeout(timeout time.Duration) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithContext(ctx context.Context) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithHTTPClient(client *http.Client) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithAuthorization(authorization string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithFilterContains adds the filterContains to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithFilterContains(filterContains *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetFilterContains(filterContains)
	return o
}

// SetFilterContains adds the filterContains to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetFilterContains(filterContains *string) {
	o.FilterContains = filterContains
}

// WithFilterEquals adds the filterEquals to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithFilterEquals(filterEquals *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetFilterEquals(filterEquals)
	return o
}

// SetFilterEquals adds the filterEquals to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetFilterEquals(filterEquals *string) {
	o.FilterEquals = filterEquals
}

// WithInstanceName adds the instanceName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithInstanceName(instanceName *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetInstanceName(instanceName)
	return o
}

// SetInstanceName adds the instanceName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetInstanceName(instanceName *string) {
	o.InstanceName = instanceName
}

// WithLimit adds the limit to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithLimit(limit *int64) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithOffset(offset *int64) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithSiteName adds the siteName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithSiteName(siteName *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetSiteName(siteName)
	return o
}

// SetSiteName adds the siteName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetSiteName(siteName *string) {
	o.SiteName = siteName
}

// WithSort adds the sort to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithSort(sort *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithTemplateName adds the templateName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithTemplateName(templateName *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetTemplateName(templateName *string) {
	o.TemplateName = templateName
}

// WithUUID adds the uuid to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) WithUUID(uuid *string) *GetAPIV1DeploymentInstancesPlanningParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the get API v1 deployment instances planning params
func (o *GetAPIV1DeploymentInstancesPlanningParams) SetUUID(uuid *string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIV1DeploymentInstancesPlanningParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.FilterContains != nil {

		// query param filterContains
		var qrFilterContains string

		if o.FilterContains != nil {
			qrFilterContains = *o.FilterContains
		}
		qFilterContains := qrFilterContains
		if qFilterContains != "" {

			if err := r.SetQueryParam("filterContains", qFilterContains); err != nil {
				return err
			}
		}
	}

	if o.FilterEquals != nil {

		// query param filterEquals
		var qrFilterEquals string

		if o.FilterEquals != nil {
			qrFilterEquals = *o.FilterEquals
		}
		qFilterEquals := qrFilterEquals
		if qFilterEquals != "" {

			if err := r.SetQueryParam("filterEquals", qFilterEquals); err != nil {
				return err
			}
		}
	}

	if o.InstanceName != nil {

		// query param instanceName
		var qrInstanceName string

		if o.InstanceName != nil {
			qrInstanceName = *o.InstanceName
		}
		qInstanceName := qrInstanceName
		if qInstanceName != "" {

			if err := r.SetQueryParam("instanceName", qInstanceName); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.SiteName != nil {

		// query param siteName
		var qrSiteName string

		if o.SiteName != nil {
			qrSiteName = *o.SiteName
		}
		qSiteName := qrSiteName
		if qSiteName != "" {

			if err := r.SetQueryParam("siteName", qSiteName); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.TemplateName != nil {

		// query param templateName
		var qrTemplateName string

		if o.TemplateName != nil {
			qrTemplateName = *o.TemplateName
		}
		qTemplateName := qrTemplateName
		if qTemplateName != "" {

			if err := r.SetQueryParam("templateName", qTemplateName); err != nil {
				return err
			}
		}
	}

	if o.UUID != nil {

		// query param uuid
		var qrUUID string

		if o.UUID != nil {
			qrUUID = *o.UUID
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
