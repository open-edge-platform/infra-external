// Code generated by go-swagger; DO NOT EDIT.

package licenses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1LicensesRemoveReader is a Reader for the PostAPIV1LicensesRemove structure.
type PostAPIV1LicensesRemoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1LicensesRemoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1LicensesRemoveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1LicensesRemoveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1LicensesRemoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1LicensesRemoveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/licenses/remove] PostAPIV1LicensesRemove", response, response.Code())
	}
}

// NewPostAPIV1LicensesRemoveOK creates a PostAPIV1LicensesRemoveOK with default headers values
func NewPostAPIV1LicensesRemoveOK() *PostAPIV1LicensesRemoveOK {
	return &PostAPIV1LicensesRemoveOK{}
}

/*
PostAPIV1LicensesRemoveOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1LicensesRemoveOK struct {
	Payload *model.DtoLicensesRemoveResponse
}

// IsSuccess returns true when this post Api v1 licenses remove o k response has a 2xx status code
func (o *PostAPIV1LicensesRemoveOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 licenses remove o k response has a 3xx status code
func (o *PostAPIV1LicensesRemoveOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses remove o k response has a 4xx status code
func (o *PostAPIV1LicensesRemoveOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 licenses remove o k response has a 5xx status code
func (o *PostAPIV1LicensesRemoveOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses remove o k response a status code equal to that given
func (o *PostAPIV1LicensesRemoveOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 licenses remove o k response
func (o *PostAPIV1LicensesRemoveOK) Code() int {
	return 200
}

func (o *PostAPIV1LicensesRemoveOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveOK %s", 200, payload)
}

func (o *PostAPIV1LicensesRemoveOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveOK %s", 200, payload)
}

func (o *PostAPIV1LicensesRemoveOK) GetPayload() *model.DtoLicensesRemoveResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesRemoveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoLicensesRemoveResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesRemoveBadRequest creates a PostAPIV1LicensesRemoveBadRequest with default headers values
func NewPostAPIV1LicensesRemoveBadRequest() *PostAPIV1LicensesRemoveBadRequest {
	return &PostAPIV1LicensesRemoveBadRequest{}
}

/*
PostAPIV1LicensesRemoveBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1LicensesRemoveBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses remove bad request response has a 2xx status code
func (o *PostAPIV1LicensesRemoveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses remove bad request response has a 3xx status code
func (o *PostAPIV1LicensesRemoveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses remove bad request response has a 4xx status code
func (o *PostAPIV1LicensesRemoveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 licenses remove bad request response has a 5xx status code
func (o *PostAPIV1LicensesRemoveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses remove bad request response a status code equal to that given
func (o *PostAPIV1LicensesRemoveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 licenses remove bad request response
func (o *PostAPIV1LicensesRemoveBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1LicensesRemoveBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveBadRequest %s", 400, payload)
}

func (o *PostAPIV1LicensesRemoveBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveBadRequest %s", 400, payload)
}

func (o *PostAPIV1LicensesRemoveBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesRemoveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesRemoveUnauthorized creates a PostAPIV1LicensesRemoveUnauthorized with default headers values
func NewPostAPIV1LicensesRemoveUnauthorized() *PostAPIV1LicensesRemoveUnauthorized {
	return &PostAPIV1LicensesRemoveUnauthorized{}
}

/*
PostAPIV1LicensesRemoveUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1LicensesRemoveUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses remove unauthorized response has a 2xx status code
func (o *PostAPIV1LicensesRemoveUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses remove unauthorized response has a 3xx status code
func (o *PostAPIV1LicensesRemoveUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses remove unauthorized response has a 4xx status code
func (o *PostAPIV1LicensesRemoveUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 licenses remove unauthorized response has a 5xx status code
func (o *PostAPIV1LicensesRemoveUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses remove unauthorized response a status code equal to that given
func (o *PostAPIV1LicensesRemoveUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 licenses remove unauthorized response
func (o *PostAPIV1LicensesRemoveUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1LicensesRemoveUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveUnauthorized %s", 401, payload)
}

func (o *PostAPIV1LicensesRemoveUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveUnauthorized %s", 401, payload)
}

func (o *PostAPIV1LicensesRemoveUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesRemoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesRemoveInternalServerError creates a PostAPIV1LicensesRemoveInternalServerError with default headers values
func NewPostAPIV1LicensesRemoveInternalServerError() *PostAPIV1LicensesRemoveInternalServerError {
	return &PostAPIV1LicensesRemoveInternalServerError{}
}

/*
PostAPIV1LicensesRemoveInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1LicensesRemoveInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses remove internal server error response has a 2xx status code
func (o *PostAPIV1LicensesRemoveInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses remove internal server error response has a 3xx status code
func (o *PostAPIV1LicensesRemoveInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses remove internal server error response has a 4xx status code
func (o *PostAPIV1LicensesRemoveInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 licenses remove internal server error response has a 5xx status code
func (o *PostAPIV1LicensesRemoveInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 licenses remove internal server error response a status code equal to that given
func (o *PostAPIV1LicensesRemoveInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 licenses remove internal server error response
func (o *PostAPIV1LicensesRemoveInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1LicensesRemoveInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveInternalServerError %s", 500, payload)
}

func (o *PostAPIV1LicensesRemoveInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/remove][%d] postApiV1LicensesRemoveInternalServerError %s", 500, payload)
}

func (o *PostAPIV1LicensesRemoveInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesRemoveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
