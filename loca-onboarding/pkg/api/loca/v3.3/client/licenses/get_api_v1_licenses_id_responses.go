// Code generated by go-swagger; DO NOT EDIT.

package licenses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1LicensesIDReader is a Reader for the GetAPIV1LicensesID structure.
type GetAPIV1LicensesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1LicensesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1LicensesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1LicensesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1LicensesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1LicensesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/licenses/{id}] GetAPIV1LicensesID", response, response.Code())
	}
}

// NewGetAPIV1LicensesIDOK creates a GetAPIV1LicensesIDOK with default headers values
func NewGetAPIV1LicensesIDOK() *GetAPIV1LicensesIDOK {
	return &GetAPIV1LicensesIDOK{}
}

/*
GetAPIV1LicensesIDOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1LicensesIDOK struct {
	Payload *model.DtoLicenseQueryResponse
}

// IsSuccess returns true when this get Api v1 licenses Id o k response has a 2xx status code
func (o *GetAPIV1LicensesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 licenses Id o k response has a 3xx status code
func (o *GetAPIV1LicensesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 licenses Id o k response has a 4xx status code
func (o *GetAPIV1LicensesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 licenses Id o k response has a 5xx status code
func (o *GetAPIV1LicensesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 licenses Id o k response a status code equal to that given
func (o *GetAPIV1LicensesIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 licenses Id o k response
func (o *GetAPIV1LicensesIDOK) Code() int {
	return 200
}

func (o *GetAPIV1LicensesIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdOK %s", 200, payload)
}

func (o *GetAPIV1LicensesIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdOK %s", 200, payload)
}

func (o *GetAPIV1LicensesIDOK) GetPayload() *model.DtoLicenseQueryResponse {
	return o.Payload
}

func (o *GetAPIV1LicensesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoLicenseQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1LicensesIDBadRequest creates a GetAPIV1LicensesIDBadRequest with default headers values
func NewGetAPIV1LicensesIDBadRequest() *GetAPIV1LicensesIDBadRequest {
	return &GetAPIV1LicensesIDBadRequest{}
}

/*
GetAPIV1LicensesIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1LicensesIDBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 licenses Id bad request response has a 2xx status code
func (o *GetAPIV1LicensesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 licenses Id bad request response has a 3xx status code
func (o *GetAPIV1LicensesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 licenses Id bad request response has a 4xx status code
func (o *GetAPIV1LicensesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 licenses Id bad request response has a 5xx status code
func (o *GetAPIV1LicensesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 licenses Id bad request response a status code equal to that given
func (o *GetAPIV1LicensesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 licenses Id bad request response
func (o *GetAPIV1LicensesIDBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1LicensesIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1LicensesIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1LicensesIDBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1LicensesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1LicensesIDUnauthorized creates a GetAPIV1LicensesIDUnauthorized with default headers values
func NewGetAPIV1LicensesIDUnauthorized() *GetAPIV1LicensesIDUnauthorized {
	return &GetAPIV1LicensesIDUnauthorized{}
}

/*
GetAPIV1LicensesIDUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1LicensesIDUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 licenses Id unauthorized response has a 2xx status code
func (o *GetAPIV1LicensesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 licenses Id unauthorized response has a 3xx status code
func (o *GetAPIV1LicensesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 licenses Id unauthorized response has a 4xx status code
func (o *GetAPIV1LicensesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 licenses Id unauthorized response has a 5xx status code
func (o *GetAPIV1LicensesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 licenses Id unauthorized response a status code equal to that given
func (o *GetAPIV1LicensesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 licenses Id unauthorized response
func (o *GetAPIV1LicensesIDUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1LicensesIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1LicensesIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1LicensesIDUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1LicensesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1LicensesIDInternalServerError creates a GetAPIV1LicensesIDInternalServerError with default headers values
func NewGetAPIV1LicensesIDInternalServerError() *GetAPIV1LicensesIDInternalServerError {
	return &GetAPIV1LicensesIDInternalServerError{}
}

/*
GetAPIV1LicensesIDInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1LicensesIDInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 licenses Id internal server error response has a 2xx status code
func (o *GetAPIV1LicensesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 licenses Id internal server error response has a 3xx status code
func (o *GetAPIV1LicensesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 licenses Id internal server error response has a 4xx status code
func (o *GetAPIV1LicensesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 licenses Id internal server error response has a 5xx status code
func (o *GetAPIV1LicensesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 licenses Id internal server error response a status code equal to that given
func (o *GetAPIV1LicensesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 licenses Id internal server error response
func (o *GetAPIV1LicensesIDInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1LicensesIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1LicensesIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/licenses/{id}][%d] getApiV1LicensesIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1LicensesIDInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1LicensesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
