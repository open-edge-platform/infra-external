// Code generated by go-swagger; DO NOT EDIT.

package licenses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1LicensesExportReader is a Reader for the PostAPIV1LicensesExport structure.
type PostAPIV1LicensesExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1LicensesExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1LicensesExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1LicensesExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1LicensesExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1LicensesExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/licenses/export] PostAPIV1LicensesExport", response, response.Code())
	}
}

// NewPostAPIV1LicensesExportOK creates a PostAPIV1LicensesExportOK with default headers values
func NewPostAPIV1LicensesExportOK() *PostAPIV1LicensesExportOK {
	return &PostAPIV1LicensesExportOK{}
}

/*
PostAPIV1LicensesExportOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1LicensesExportOK struct {
	Payload interface{}
}

// IsSuccess returns true when this post Api v1 licenses export o k response has a 2xx status code
func (o *PostAPIV1LicensesExportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 licenses export o k response has a 3xx status code
func (o *PostAPIV1LicensesExportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses export o k response has a 4xx status code
func (o *PostAPIV1LicensesExportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 licenses export o k response has a 5xx status code
func (o *PostAPIV1LicensesExportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses export o k response a status code equal to that given
func (o *PostAPIV1LicensesExportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 licenses export o k response
func (o *PostAPIV1LicensesExportOK) Code() int {
	return 200
}

func (o *PostAPIV1LicensesExportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportOK %s", 200, payload)
}

func (o *PostAPIV1LicensesExportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportOK %s", 200, payload)
}

func (o *PostAPIV1LicensesExportOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAPIV1LicensesExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesExportBadRequest creates a PostAPIV1LicensesExportBadRequest with default headers values
func NewPostAPIV1LicensesExportBadRequest() *PostAPIV1LicensesExportBadRequest {
	return &PostAPIV1LicensesExportBadRequest{}
}

/*
PostAPIV1LicensesExportBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1LicensesExportBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses export bad request response has a 2xx status code
func (o *PostAPIV1LicensesExportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses export bad request response has a 3xx status code
func (o *PostAPIV1LicensesExportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses export bad request response has a 4xx status code
func (o *PostAPIV1LicensesExportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 licenses export bad request response has a 5xx status code
func (o *PostAPIV1LicensesExportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses export bad request response a status code equal to that given
func (o *PostAPIV1LicensesExportBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 licenses export bad request response
func (o *PostAPIV1LicensesExportBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1LicensesExportBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportBadRequest %s", 400, payload)
}

func (o *PostAPIV1LicensesExportBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportBadRequest %s", 400, payload)
}

func (o *PostAPIV1LicensesExportBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesExportUnauthorized creates a PostAPIV1LicensesExportUnauthorized with default headers values
func NewPostAPIV1LicensesExportUnauthorized() *PostAPIV1LicensesExportUnauthorized {
	return &PostAPIV1LicensesExportUnauthorized{}
}

/*
PostAPIV1LicensesExportUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1LicensesExportUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses export unauthorized response has a 2xx status code
func (o *PostAPIV1LicensesExportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses export unauthorized response has a 3xx status code
func (o *PostAPIV1LicensesExportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses export unauthorized response has a 4xx status code
func (o *PostAPIV1LicensesExportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 licenses export unauthorized response has a 5xx status code
func (o *PostAPIV1LicensesExportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 licenses export unauthorized response a status code equal to that given
func (o *PostAPIV1LicensesExportUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 licenses export unauthorized response
func (o *PostAPIV1LicensesExportUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1LicensesExportUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportUnauthorized %s", 401, payload)
}

func (o *PostAPIV1LicensesExportUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportUnauthorized %s", 401, payload)
}

func (o *PostAPIV1LicensesExportUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1LicensesExportInternalServerError creates a PostAPIV1LicensesExportInternalServerError with default headers values
func NewPostAPIV1LicensesExportInternalServerError() *PostAPIV1LicensesExportInternalServerError {
	return &PostAPIV1LicensesExportInternalServerError{}
}

/*
PostAPIV1LicensesExportInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1LicensesExportInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 licenses export internal server error response has a 2xx status code
func (o *PostAPIV1LicensesExportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 licenses export internal server error response has a 3xx status code
func (o *PostAPIV1LicensesExportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 licenses export internal server error response has a 4xx status code
func (o *PostAPIV1LicensesExportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 licenses export internal server error response has a 5xx status code
func (o *PostAPIV1LicensesExportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 licenses export internal server error response a status code equal to that given
func (o *PostAPIV1LicensesExportInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 licenses export internal server error response
func (o *PostAPIV1LicensesExportInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1LicensesExportInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportInternalServerError %s", 500, payload)
}

func (o *PostAPIV1LicensesExportInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/licenses/export][%d] postApiV1LicensesExportInternalServerError %s", 500, payload)
}

func (o *PostAPIV1LicensesExportInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1LicensesExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
