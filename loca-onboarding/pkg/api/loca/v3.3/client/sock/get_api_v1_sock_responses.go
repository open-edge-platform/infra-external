// Code generated by go-swagger; DO NOT EDIT.

package sock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1SockReader is a Reader for the GetAPIV1Sock structure.
type GetAPIV1SockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1SockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1SockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1SockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1SockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/sock] GetAPIV1Sock", response, response.Code())
	}
}

// NewGetAPIV1SockOK creates a GetAPIV1SockOK with default headers values
func NewGetAPIV1SockOK() *GetAPIV1SockOK {
	return &GetAPIV1SockOK{}
}

/*
GetAPIV1SockOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1SockOK struct {
	Payload *model.DtoResponseBase
}

// IsSuccess returns true when this get Api v1 sock o k response has a 2xx status code
func (o *GetAPIV1SockOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 sock o k response has a 3xx status code
func (o *GetAPIV1SockOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 sock o k response has a 4xx status code
func (o *GetAPIV1SockOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 sock o k response has a 5xx status code
func (o *GetAPIV1SockOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 sock o k response a status code equal to that given
func (o *GetAPIV1SockOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 sock o k response
func (o *GetAPIV1SockOK) Code() int {
	return 200
}

func (o *GetAPIV1SockOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockOK %s", 200, payload)
}

func (o *GetAPIV1SockOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockOK %s", 200, payload)
}

func (o *GetAPIV1SockOK) GetPayload() *model.DtoResponseBase {
	return o.Payload
}

func (o *GetAPIV1SockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoResponseBase)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1SockBadRequest creates a GetAPIV1SockBadRequest with default headers values
func NewGetAPIV1SockBadRequest() *GetAPIV1SockBadRequest {
	return &GetAPIV1SockBadRequest{}
}

/*
GetAPIV1SockBadRequest describes a response with status code 400, with default header values.

auth fail
*/
type GetAPIV1SockBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 sock bad request response has a 2xx status code
func (o *GetAPIV1SockBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 sock bad request response has a 3xx status code
func (o *GetAPIV1SockBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 sock bad request response has a 4xx status code
func (o *GetAPIV1SockBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 sock bad request response has a 5xx status code
func (o *GetAPIV1SockBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 sock bad request response a status code equal to that given
func (o *GetAPIV1SockBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 sock bad request response
func (o *GetAPIV1SockBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1SockBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockBadRequest %s", 400, payload)
}

func (o *GetAPIV1SockBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockBadRequest %s", 400, payload)
}

func (o *GetAPIV1SockBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1SockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1SockInternalServerError creates a GetAPIV1SockInternalServerError with default headers values
func NewGetAPIV1SockInternalServerError() *GetAPIV1SockInternalServerError {
	return &GetAPIV1SockInternalServerError{}
}

/*
GetAPIV1SockInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1SockInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 sock internal server error response has a 2xx status code
func (o *GetAPIV1SockInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 sock internal server error response has a 3xx status code
func (o *GetAPIV1SockInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 sock internal server error response has a 4xx status code
func (o *GetAPIV1SockInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 sock internal server error response has a 5xx status code
func (o *GetAPIV1SockInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 sock internal server error response a status code equal to that given
func (o *GetAPIV1SockInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 sock internal server error response
func (o *GetAPIV1SockInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1SockInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockInternalServerError %s", 500, payload)
}

func (o *GetAPIV1SockInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/sock][%d] getApiV1SockInternalServerError %s", 500, payload)
}

func (o *GetAPIV1SockInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1SockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
