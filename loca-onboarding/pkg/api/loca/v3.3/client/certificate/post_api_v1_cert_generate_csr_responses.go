// Code generated by go-swagger; DO NOT EDIT.

package certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1CertGenerateCsrReader is a Reader for the PostAPIV1CertGenerateCsr structure.
type PostAPIV1CertGenerateCsrReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1CertGenerateCsrReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1CertGenerateCsrOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1CertGenerateCsrBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1CertGenerateCsrUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAPIV1CertGenerateCsrTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1CertGenerateCsrInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/cert/generate-csr] PostAPIV1CertGenerateCsr", response, response.Code())
	}
}

// NewPostAPIV1CertGenerateCsrOK creates a PostAPIV1CertGenerateCsrOK with default headers values
func NewPostAPIV1CertGenerateCsrOK() *PostAPIV1CertGenerateCsrOK {
	return &PostAPIV1CertGenerateCsrOK{}
}

/*
PostAPIV1CertGenerateCsrOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1CertGenerateCsrOK struct {
	Payload interface{}
}

// IsSuccess returns true when this post Api v1 cert generate csr o k response has a 2xx status code
func (o *PostAPIV1CertGenerateCsrOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 cert generate csr o k response has a 3xx status code
func (o *PostAPIV1CertGenerateCsrOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert generate csr o k response has a 4xx status code
func (o *PostAPIV1CertGenerateCsrOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 cert generate csr o k response has a 5xx status code
func (o *PostAPIV1CertGenerateCsrOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert generate csr o k response a status code equal to that given
func (o *PostAPIV1CertGenerateCsrOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 cert generate csr o k response
func (o *PostAPIV1CertGenerateCsrOK) Code() int {
	return 200
}

func (o *PostAPIV1CertGenerateCsrOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrOK %s", 200, payload)
}

func (o *PostAPIV1CertGenerateCsrOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrOK %s", 200, payload)
}

func (o *PostAPIV1CertGenerateCsrOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAPIV1CertGenerateCsrOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertGenerateCsrBadRequest creates a PostAPIV1CertGenerateCsrBadRequest with default headers values
func NewPostAPIV1CertGenerateCsrBadRequest() *PostAPIV1CertGenerateCsrBadRequest {
	return &PostAPIV1CertGenerateCsrBadRequest{}
}

/*
PostAPIV1CertGenerateCsrBadRequest describes a response with status code 400, with default header values.

failure
*/
type PostAPIV1CertGenerateCsrBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert generate csr bad request response has a 2xx status code
func (o *PostAPIV1CertGenerateCsrBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert generate csr bad request response has a 3xx status code
func (o *PostAPIV1CertGenerateCsrBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert generate csr bad request response has a 4xx status code
func (o *PostAPIV1CertGenerateCsrBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 cert generate csr bad request response has a 5xx status code
func (o *PostAPIV1CertGenerateCsrBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert generate csr bad request response a status code equal to that given
func (o *PostAPIV1CertGenerateCsrBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 cert generate csr bad request response
func (o *PostAPIV1CertGenerateCsrBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1CertGenerateCsrBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrBadRequest %s", 400, payload)
}

func (o *PostAPIV1CertGenerateCsrBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrBadRequest %s", 400, payload)
}

func (o *PostAPIV1CertGenerateCsrBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertGenerateCsrBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertGenerateCsrUnauthorized creates a PostAPIV1CertGenerateCsrUnauthorized with default headers values
func NewPostAPIV1CertGenerateCsrUnauthorized() *PostAPIV1CertGenerateCsrUnauthorized {
	return &PostAPIV1CertGenerateCsrUnauthorized{}
}

/*
PostAPIV1CertGenerateCsrUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1CertGenerateCsrUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert generate csr unauthorized response has a 2xx status code
func (o *PostAPIV1CertGenerateCsrUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert generate csr unauthorized response has a 3xx status code
func (o *PostAPIV1CertGenerateCsrUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert generate csr unauthorized response has a 4xx status code
func (o *PostAPIV1CertGenerateCsrUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 cert generate csr unauthorized response has a 5xx status code
func (o *PostAPIV1CertGenerateCsrUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert generate csr unauthorized response a status code equal to that given
func (o *PostAPIV1CertGenerateCsrUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 cert generate csr unauthorized response
func (o *PostAPIV1CertGenerateCsrUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1CertGenerateCsrUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrUnauthorized %s", 401, payload)
}

func (o *PostAPIV1CertGenerateCsrUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrUnauthorized %s", 401, payload)
}

func (o *PostAPIV1CertGenerateCsrUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertGenerateCsrUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertGenerateCsrTooManyRequests creates a PostAPIV1CertGenerateCsrTooManyRequests with default headers values
func NewPostAPIV1CertGenerateCsrTooManyRequests() *PostAPIV1CertGenerateCsrTooManyRequests {
	return &PostAPIV1CertGenerateCsrTooManyRequests{}
}

/*
PostAPIV1CertGenerateCsrTooManyRequests describes a response with status code 429, with default header values.

too many requests in generating CSR
*/
type PostAPIV1CertGenerateCsrTooManyRequests struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert generate csr too many requests response has a 2xx status code
func (o *PostAPIV1CertGenerateCsrTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert generate csr too many requests response has a 3xx status code
func (o *PostAPIV1CertGenerateCsrTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert generate csr too many requests response has a 4xx status code
func (o *PostAPIV1CertGenerateCsrTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 cert generate csr too many requests response has a 5xx status code
func (o *PostAPIV1CertGenerateCsrTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert generate csr too many requests response a status code equal to that given
func (o *PostAPIV1CertGenerateCsrTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the post Api v1 cert generate csr too many requests response
func (o *PostAPIV1CertGenerateCsrTooManyRequests) Code() int {
	return 429
}

func (o *PostAPIV1CertGenerateCsrTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrTooManyRequests %s", 429, payload)
}

func (o *PostAPIV1CertGenerateCsrTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrTooManyRequests %s", 429, payload)
}

func (o *PostAPIV1CertGenerateCsrTooManyRequests) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertGenerateCsrTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertGenerateCsrInternalServerError creates a PostAPIV1CertGenerateCsrInternalServerError with default headers values
func NewPostAPIV1CertGenerateCsrInternalServerError() *PostAPIV1CertGenerateCsrInternalServerError {
	return &PostAPIV1CertGenerateCsrInternalServerError{}
}

/*
PostAPIV1CertGenerateCsrInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1CertGenerateCsrInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert generate csr internal server error response has a 2xx status code
func (o *PostAPIV1CertGenerateCsrInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert generate csr internal server error response has a 3xx status code
func (o *PostAPIV1CertGenerateCsrInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert generate csr internal server error response has a 4xx status code
func (o *PostAPIV1CertGenerateCsrInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 cert generate csr internal server error response has a 5xx status code
func (o *PostAPIV1CertGenerateCsrInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 cert generate csr internal server error response a status code equal to that given
func (o *PostAPIV1CertGenerateCsrInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 cert generate csr internal server error response
func (o *PostAPIV1CertGenerateCsrInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1CertGenerateCsrInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrInternalServerError %s", 500, payload)
}

func (o *PostAPIV1CertGenerateCsrInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/generate-csr][%d] postApiV1CertGenerateCsrInternalServerError %s", 500, payload)
}

func (o *PostAPIV1CertGenerateCsrInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertGenerateCsrInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
