// Code generated by go-swagger; DO NOT EDIT.

package certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1CertDownloadCsrReader is a Reader for the GetAPIV1CertDownloadCsr structure.
type GetAPIV1CertDownloadCsrReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1CertDownloadCsrReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1CertDownloadCsrOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1CertDownloadCsrBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1CertDownloadCsrUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1CertDownloadCsrInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/cert/download-csr] GetAPIV1CertDownloadCsr", response, response.Code())
	}
}

// NewGetAPIV1CertDownloadCsrOK creates a GetAPIV1CertDownloadCsrOK with default headers values
func NewGetAPIV1CertDownloadCsrOK() *GetAPIV1CertDownloadCsrOK {
	return &GetAPIV1CertDownloadCsrOK{}
}

/*
GetAPIV1CertDownloadCsrOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1CertDownloadCsrOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get Api v1 cert download csr o k response has a 2xx status code
func (o *GetAPIV1CertDownloadCsrOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 cert download csr o k response has a 3xx status code
func (o *GetAPIV1CertDownloadCsrOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download csr o k response has a 4xx status code
func (o *GetAPIV1CertDownloadCsrOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 cert download csr o k response has a 5xx status code
func (o *GetAPIV1CertDownloadCsrOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download csr o k response a status code equal to that given
func (o *GetAPIV1CertDownloadCsrOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 cert download csr o k response
func (o *GetAPIV1CertDownloadCsrOK) Code() int {
	return 200
}

func (o *GetAPIV1CertDownloadCsrOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrOK %s", 200, payload)
}

func (o *GetAPIV1CertDownloadCsrOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrOK %s", 200, payload)
}

func (o *GetAPIV1CertDownloadCsrOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCsrOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCsrBadRequest creates a GetAPIV1CertDownloadCsrBadRequest with default headers values
func NewGetAPIV1CertDownloadCsrBadRequest() *GetAPIV1CertDownloadCsrBadRequest {
	return &GetAPIV1CertDownloadCsrBadRequest{}
}

/*
GetAPIV1CertDownloadCsrBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1CertDownloadCsrBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download csr bad request response has a 2xx status code
func (o *GetAPIV1CertDownloadCsrBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download csr bad request response has a 3xx status code
func (o *GetAPIV1CertDownloadCsrBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download csr bad request response has a 4xx status code
func (o *GetAPIV1CertDownloadCsrBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 cert download csr bad request response has a 5xx status code
func (o *GetAPIV1CertDownloadCsrBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download csr bad request response a status code equal to that given
func (o *GetAPIV1CertDownloadCsrBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 cert download csr bad request response
func (o *GetAPIV1CertDownloadCsrBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1CertDownloadCsrBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrBadRequest %s", 400, payload)
}

func (o *GetAPIV1CertDownloadCsrBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrBadRequest %s", 400, payload)
}

func (o *GetAPIV1CertDownloadCsrBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCsrBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCsrUnauthorized creates a GetAPIV1CertDownloadCsrUnauthorized with default headers values
func NewGetAPIV1CertDownloadCsrUnauthorized() *GetAPIV1CertDownloadCsrUnauthorized {
	return &GetAPIV1CertDownloadCsrUnauthorized{}
}

/*
GetAPIV1CertDownloadCsrUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1CertDownloadCsrUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download csr unauthorized response has a 2xx status code
func (o *GetAPIV1CertDownloadCsrUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download csr unauthorized response has a 3xx status code
func (o *GetAPIV1CertDownloadCsrUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download csr unauthorized response has a 4xx status code
func (o *GetAPIV1CertDownloadCsrUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 cert download csr unauthorized response has a 5xx status code
func (o *GetAPIV1CertDownloadCsrUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download csr unauthorized response a status code equal to that given
func (o *GetAPIV1CertDownloadCsrUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 cert download csr unauthorized response
func (o *GetAPIV1CertDownloadCsrUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1CertDownloadCsrUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrUnauthorized %s", 401, payload)
}

func (o *GetAPIV1CertDownloadCsrUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrUnauthorized %s", 401, payload)
}

func (o *GetAPIV1CertDownloadCsrUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCsrUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCsrInternalServerError creates a GetAPIV1CertDownloadCsrInternalServerError with default headers values
func NewGetAPIV1CertDownloadCsrInternalServerError() *GetAPIV1CertDownloadCsrInternalServerError {
	return &GetAPIV1CertDownloadCsrInternalServerError{}
}

/*
GetAPIV1CertDownloadCsrInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1CertDownloadCsrInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download csr internal server error response has a 2xx status code
func (o *GetAPIV1CertDownloadCsrInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download csr internal server error response has a 3xx status code
func (o *GetAPIV1CertDownloadCsrInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download csr internal server error response has a 4xx status code
func (o *GetAPIV1CertDownloadCsrInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 cert download csr internal server error response has a 5xx status code
func (o *GetAPIV1CertDownloadCsrInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 cert download csr internal server error response a status code equal to that given
func (o *GetAPIV1CertDownloadCsrInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 cert download csr internal server error response
func (o *GetAPIV1CertDownloadCsrInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1CertDownloadCsrInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrInternalServerError %s", 500, payload)
}

func (o *GetAPIV1CertDownloadCsrInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-csr][%d] getApiV1CertDownloadCsrInternalServerError %s", 500, payload)
}

func (o *GetAPIV1CertDownloadCsrInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCsrInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
