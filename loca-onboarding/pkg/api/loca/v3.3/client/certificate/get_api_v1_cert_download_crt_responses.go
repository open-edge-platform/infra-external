// Code generated by go-swagger; DO NOT EDIT.

package certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1CertDownloadCrtReader is a Reader for the GetAPIV1CertDownloadCrt structure.
type GetAPIV1CertDownloadCrtReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1CertDownloadCrtReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1CertDownloadCrtOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1CertDownloadCrtBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1CertDownloadCrtUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1CertDownloadCrtInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/cert/download-crt] GetAPIV1CertDownloadCrt", response, response.Code())
	}
}

// NewGetAPIV1CertDownloadCrtOK creates a GetAPIV1CertDownloadCrtOK with default headers values
func NewGetAPIV1CertDownloadCrtOK() *GetAPIV1CertDownloadCrtOK {
	return &GetAPIV1CertDownloadCrtOK{}
}

/*
GetAPIV1CertDownloadCrtOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1CertDownloadCrtOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get Api v1 cert download crt o k response has a 2xx status code
func (o *GetAPIV1CertDownloadCrtOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 cert download crt o k response has a 3xx status code
func (o *GetAPIV1CertDownloadCrtOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download crt o k response has a 4xx status code
func (o *GetAPIV1CertDownloadCrtOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 cert download crt o k response has a 5xx status code
func (o *GetAPIV1CertDownloadCrtOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download crt o k response a status code equal to that given
func (o *GetAPIV1CertDownloadCrtOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 cert download crt o k response
func (o *GetAPIV1CertDownloadCrtOK) Code() int {
	return 200
}

func (o *GetAPIV1CertDownloadCrtOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtOK %s", 200, payload)
}

func (o *GetAPIV1CertDownloadCrtOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtOK %s", 200, payload)
}

func (o *GetAPIV1CertDownloadCrtOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCrtOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCrtBadRequest creates a GetAPIV1CertDownloadCrtBadRequest with default headers values
func NewGetAPIV1CertDownloadCrtBadRequest() *GetAPIV1CertDownloadCrtBadRequest {
	return &GetAPIV1CertDownloadCrtBadRequest{}
}

/*
GetAPIV1CertDownloadCrtBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1CertDownloadCrtBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download crt bad request response has a 2xx status code
func (o *GetAPIV1CertDownloadCrtBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download crt bad request response has a 3xx status code
func (o *GetAPIV1CertDownloadCrtBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download crt bad request response has a 4xx status code
func (o *GetAPIV1CertDownloadCrtBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 cert download crt bad request response has a 5xx status code
func (o *GetAPIV1CertDownloadCrtBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download crt bad request response a status code equal to that given
func (o *GetAPIV1CertDownloadCrtBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 cert download crt bad request response
func (o *GetAPIV1CertDownloadCrtBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1CertDownloadCrtBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtBadRequest %s", 400, payload)
}

func (o *GetAPIV1CertDownloadCrtBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtBadRequest %s", 400, payload)
}

func (o *GetAPIV1CertDownloadCrtBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCrtBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCrtUnauthorized creates a GetAPIV1CertDownloadCrtUnauthorized with default headers values
func NewGetAPIV1CertDownloadCrtUnauthorized() *GetAPIV1CertDownloadCrtUnauthorized {
	return &GetAPIV1CertDownloadCrtUnauthorized{}
}

/*
GetAPIV1CertDownloadCrtUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1CertDownloadCrtUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download crt unauthorized response has a 2xx status code
func (o *GetAPIV1CertDownloadCrtUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download crt unauthorized response has a 3xx status code
func (o *GetAPIV1CertDownloadCrtUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download crt unauthorized response has a 4xx status code
func (o *GetAPIV1CertDownloadCrtUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 cert download crt unauthorized response has a 5xx status code
func (o *GetAPIV1CertDownloadCrtUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 cert download crt unauthorized response a status code equal to that given
func (o *GetAPIV1CertDownloadCrtUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 cert download crt unauthorized response
func (o *GetAPIV1CertDownloadCrtUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1CertDownloadCrtUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtUnauthorized %s", 401, payload)
}

func (o *GetAPIV1CertDownloadCrtUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtUnauthorized %s", 401, payload)
}

func (o *GetAPIV1CertDownloadCrtUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCrtUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1CertDownloadCrtInternalServerError creates a GetAPIV1CertDownloadCrtInternalServerError with default headers values
func NewGetAPIV1CertDownloadCrtInternalServerError() *GetAPIV1CertDownloadCrtInternalServerError {
	return &GetAPIV1CertDownloadCrtInternalServerError{}
}

/*
GetAPIV1CertDownloadCrtInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1CertDownloadCrtInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 cert download crt internal server error response has a 2xx status code
func (o *GetAPIV1CertDownloadCrtInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 cert download crt internal server error response has a 3xx status code
func (o *GetAPIV1CertDownloadCrtInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 cert download crt internal server error response has a 4xx status code
func (o *GetAPIV1CertDownloadCrtInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 cert download crt internal server error response has a 5xx status code
func (o *GetAPIV1CertDownloadCrtInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 cert download crt internal server error response a status code equal to that given
func (o *GetAPIV1CertDownloadCrtInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 cert download crt internal server error response
func (o *GetAPIV1CertDownloadCrtInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1CertDownloadCrtInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtInternalServerError %s", 500, payload)
}

func (o *GetAPIV1CertDownloadCrtInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/cert/download-crt][%d] getApiV1CertDownloadCrtInternalServerError %s", 500, payload)
}

func (o *GetAPIV1CertDownloadCrtInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1CertDownloadCrtInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
