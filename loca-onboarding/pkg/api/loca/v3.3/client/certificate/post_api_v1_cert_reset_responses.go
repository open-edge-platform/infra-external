// Code generated by go-swagger; DO NOT EDIT.

package certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1CertResetReader is a Reader for the PostAPIV1CertReset structure.
type PostAPIV1CertResetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1CertResetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1CertResetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1CertResetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1CertResetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1CertResetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/cert/reset] PostAPIV1CertReset", response, response.Code())
	}
}

// NewPostAPIV1CertResetOK creates a PostAPIV1CertResetOK with default headers values
func NewPostAPIV1CertResetOK() *PostAPIV1CertResetOK {
	return &PostAPIV1CertResetOK{}
}

/*
PostAPIV1CertResetOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1CertResetOK struct {
	Payload interface{}
}

// IsSuccess returns true when this post Api v1 cert reset o k response has a 2xx status code
func (o *PostAPIV1CertResetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 cert reset o k response has a 3xx status code
func (o *PostAPIV1CertResetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert reset o k response has a 4xx status code
func (o *PostAPIV1CertResetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 cert reset o k response has a 5xx status code
func (o *PostAPIV1CertResetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert reset o k response a status code equal to that given
func (o *PostAPIV1CertResetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 cert reset o k response
func (o *PostAPIV1CertResetOK) Code() int {
	return 200
}

func (o *PostAPIV1CertResetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetOK %s", 200, payload)
}

func (o *PostAPIV1CertResetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetOK %s", 200, payload)
}

func (o *PostAPIV1CertResetOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAPIV1CertResetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertResetBadRequest creates a PostAPIV1CertResetBadRequest with default headers values
func NewPostAPIV1CertResetBadRequest() *PostAPIV1CertResetBadRequest {
	return &PostAPIV1CertResetBadRequest{}
}

/*
PostAPIV1CertResetBadRequest describes a response with status code 400, with default header values.

failure
*/
type PostAPIV1CertResetBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert reset bad request response has a 2xx status code
func (o *PostAPIV1CertResetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert reset bad request response has a 3xx status code
func (o *PostAPIV1CertResetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert reset bad request response has a 4xx status code
func (o *PostAPIV1CertResetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 cert reset bad request response has a 5xx status code
func (o *PostAPIV1CertResetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert reset bad request response a status code equal to that given
func (o *PostAPIV1CertResetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 cert reset bad request response
func (o *PostAPIV1CertResetBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1CertResetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetBadRequest %s", 400, payload)
}

func (o *PostAPIV1CertResetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetBadRequest %s", 400, payload)
}

func (o *PostAPIV1CertResetBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertResetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertResetUnauthorized creates a PostAPIV1CertResetUnauthorized with default headers values
func NewPostAPIV1CertResetUnauthorized() *PostAPIV1CertResetUnauthorized {
	return &PostAPIV1CertResetUnauthorized{}
}

/*
PostAPIV1CertResetUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1CertResetUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert reset unauthorized response has a 2xx status code
func (o *PostAPIV1CertResetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert reset unauthorized response has a 3xx status code
func (o *PostAPIV1CertResetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert reset unauthorized response has a 4xx status code
func (o *PostAPIV1CertResetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 cert reset unauthorized response has a 5xx status code
func (o *PostAPIV1CertResetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 cert reset unauthorized response a status code equal to that given
func (o *PostAPIV1CertResetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 cert reset unauthorized response
func (o *PostAPIV1CertResetUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1CertResetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetUnauthorized %s", 401, payload)
}

func (o *PostAPIV1CertResetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetUnauthorized %s", 401, payload)
}

func (o *PostAPIV1CertResetUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertResetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1CertResetInternalServerError creates a PostAPIV1CertResetInternalServerError with default headers values
func NewPostAPIV1CertResetInternalServerError() *PostAPIV1CertResetInternalServerError {
	return &PostAPIV1CertResetInternalServerError{}
}

/*
PostAPIV1CertResetInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1CertResetInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 cert reset internal server error response has a 2xx status code
func (o *PostAPIV1CertResetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 cert reset internal server error response has a 3xx status code
func (o *PostAPIV1CertResetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 cert reset internal server error response has a 4xx status code
func (o *PostAPIV1CertResetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 cert reset internal server error response has a 5xx status code
func (o *PostAPIV1CertResetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 cert reset internal server error response a status code equal to that given
func (o *PostAPIV1CertResetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 cert reset internal server error response
func (o *PostAPIV1CertResetInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1CertResetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetInternalServerError %s", 500, payload)
}

func (o *PostAPIV1CertResetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/cert/reset][%d] postApiV1CertResetInternalServerError %s", 500, payload)
}

func (o *PostAPIV1CertResetInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1CertResetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
