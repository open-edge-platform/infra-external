// Code generated by go-swagger; DO NOT EDIT.

package authentication_and_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1AuthLoginReader is a Reader for the PostAPIV1AuthLogin structure.
type PostAPIV1AuthLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1AuthLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1AuthLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1AuthLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1AuthLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1AuthLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/auth/login] PostAPIV1AuthLogin", response, response.Code())
	}
}

// NewPostAPIV1AuthLoginOK creates a PostAPIV1AuthLoginOK with default headers values
func NewPostAPIV1AuthLoginOK() *PostAPIV1AuthLoginOK {
	return &PostAPIV1AuthLoginOK{}
}

/*
PostAPIV1AuthLoginOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1AuthLoginOK struct {
	Payload *model.DtoUserLoginResponse
}

// IsSuccess returns true when this post Api v1 auth login o k response has a 2xx status code
func (o *PostAPIV1AuthLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 auth login o k response has a 3xx status code
func (o *PostAPIV1AuthLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth login o k response has a 4xx status code
func (o *PostAPIV1AuthLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 auth login o k response has a 5xx status code
func (o *PostAPIV1AuthLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth login o k response a status code equal to that given
func (o *PostAPIV1AuthLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 auth login o k response
func (o *PostAPIV1AuthLoginOK) Code() int {
	return 200
}

func (o *PostAPIV1AuthLoginOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginOK %s", 200, payload)
}

func (o *PostAPIV1AuthLoginOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginOK %s", 200, payload)
}

func (o *PostAPIV1AuthLoginOK) GetPayload() *model.DtoUserLoginResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoUserLoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLoginBadRequest creates a PostAPIV1AuthLoginBadRequest with default headers values
func NewPostAPIV1AuthLoginBadRequest() *PostAPIV1AuthLoginBadRequest {
	return &PostAPIV1AuthLoginBadRequest{}
}

/*
PostAPIV1AuthLoginBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1AuthLoginBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth login bad request response has a 2xx status code
func (o *PostAPIV1AuthLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth login bad request response has a 3xx status code
func (o *PostAPIV1AuthLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth login bad request response has a 4xx status code
func (o *PostAPIV1AuthLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 auth login bad request response has a 5xx status code
func (o *PostAPIV1AuthLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth login bad request response a status code equal to that given
func (o *PostAPIV1AuthLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 auth login bad request response
func (o *PostAPIV1AuthLoginBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1AuthLoginBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginBadRequest %s", 400, payload)
}

func (o *PostAPIV1AuthLoginBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginBadRequest %s", 400, payload)
}

func (o *PostAPIV1AuthLoginBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLoginUnauthorized creates a PostAPIV1AuthLoginUnauthorized with default headers values
func NewPostAPIV1AuthLoginUnauthorized() *PostAPIV1AuthLoginUnauthorized {
	return &PostAPIV1AuthLoginUnauthorized{}
}

/*
PostAPIV1AuthLoginUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1AuthLoginUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth login unauthorized response has a 2xx status code
func (o *PostAPIV1AuthLoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth login unauthorized response has a 3xx status code
func (o *PostAPIV1AuthLoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth login unauthorized response has a 4xx status code
func (o *PostAPIV1AuthLoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 auth login unauthorized response has a 5xx status code
func (o *PostAPIV1AuthLoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth login unauthorized response a status code equal to that given
func (o *PostAPIV1AuthLoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 auth login unauthorized response
func (o *PostAPIV1AuthLoginUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1AuthLoginUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginUnauthorized %s", 401, payload)
}

func (o *PostAPIV1AuthLoginUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginUnauthorized %s", 401, payload)
}

func (o *PostAPIV1AuthLoginUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLoginInternalServerError creates a PostAPIV1AuthLoginInternalServerError with default headers values
func NewPostAPIV1AuthLoginInternalServerError() *PostAPIV1AuthLoginInternalServerError {
	return &PostAPIV1AuthLoginInternalServerError{}
}

/*
PostAPIV1AuthLoginInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1AuthLoginInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth login internal server error response has a 2xx status code
func (o *PostAPIV1AuthLoginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth login internal server error response has a 3xx status code
func (o *PostAPIV1AuthLoginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth login internal server error response has a 4xx status code
func (o *PostAPIV1AuthLoginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 auth login internal server error response has a 5xx status code
func (o *PostAPIV1AuthLoginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 auth login internal server error response a status code equal to that given
func (o *PostAPIV1AuthLoginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 auth login internal server error response
func (o *PostAPIV1AuthLoginInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1AuthLoginInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginInternalServerError %s", 500, payload)
}

func (o *PostAPIV1AuthLoginInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] postApiV1AuthLoginInternalServerError %s", 500, payload)
}

func (o *PostAPIV1AuthLoginInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
