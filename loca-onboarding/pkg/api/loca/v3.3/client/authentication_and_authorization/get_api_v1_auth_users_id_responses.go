// Code generated by go-swagger; DO NOT EDIT.

package authentication_and_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1AuthUsersIDReader is a Reader for the GetAPIV1AuthUsersID structure.
type GetAPIV1AuthUsersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1AuthUsersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1AuthUsersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1AuthUsersIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1AuthUsersIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1AuthUsersIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/auth/users/{id}] GetAPIV1AuthUsersID", response, response.Code())
	}
}

// NewGetAPIV1AuthUsersIDOK creates a GetAPIV1AuthUsersIDOK with default headers values
func NewGetAPIV1AuthUsersIDOK() *GetAPIV1AuthUsersIDOK {
	return &GetAPIV1AuthUsersIDOK{}
}

/*
GetAPIV1AuthUsersIDOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1AuthUsersIDOK struct {
	Payload *model.DtoUserResponse
}

// IsSuccess returns true when this get Api v1 auth users Id o k response has a 2xx status code
func (o *GetAPIV1AuthUsersIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 auth users Id o k response has a 3xx status code
func (o *GetAPIV1AuthUsersIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users Id o k response has a 4xx status code
func (o *GetAPIV1AuthUsersIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth users Id o k response has a 5xx status code
func (o *GetAPIV1AuthUsersIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users Id o k response a status code equal to that given
func (o *GetAPIV1AuthUsersIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 auth users Id o k response
func (o *GetAPIV1AuthUsersIDOK) Code() int {
	return 200
}

func (o *GetAPIV1AuthUsersIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdOK %s", 200, payload)
}

func (o *GetAPIV1AuthUsersIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdOK %s", 200, payload)
}

func (o *GetAPIV1AuthUsersIDOK) GetPayload() *model.DtoUserResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoUserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersIDBadRequest creates a GetAPIV1AuthUsersIDBadRequest with default headers values
func NewGetAPIV1AuthUsersIDBadRequest() *GetAPIV1AuthUsersIDBadRequest {
	return &GetAPIV1AuthUsersIDBadRequest{}
}

/*
GetAPIV1AuthUsersIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1AuthUsersIDBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users Id bad request response has a 2xx status code
func (o *GetAPIV1AuthUsersIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users Id bad request response has a 3xx status code
func (o *GetAPIV1AuthUsersIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users Id bad request response has a 4xx status code
func (o *GetAPIV1AuthUsersIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth users Id bad request response has a 5xx status code
func (o *GetAPIV1AuthUsersIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users Id bad request response a status code equal to that given
func (o *GetAPIV1AuthUsersIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 auth users Id bad request response
func (o *GetAPIV1AuthUsersIDBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1AuthUsersIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1AuthUsersIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1AuthUsersIDBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersIDUnauthorized creates a GetAPIV1AuthUsersIDUnauthorized with default headers values
func NewGetAPIV1AuthUsersIDUnauthorized() *GetAPIV1AuthUsersIDUnauthorized {
	return &GetAPIV1AuthUsersIDUnauthorized{}
}

/*
GetAPIV1AuthUsersIDUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1AuthUsersIDUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users Id unauthorized response has a 2xx status code
func (o *GetAPIV1AuthUsersIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users Id unauthorized response has a 3xx status code
func (o *GetAPIV1AuthUsersIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users Id unauthorized response has a 4xx status code
func (o *GetAPIV1AuthUsersIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth users Id unauthorized response has a 5xx status code
func (o *GetAPIV1AuthUsersIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users Id unauthorized response a status code equal to that given
func (o *GetAPIV1AuthUsersIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 auth users Id unauthorized response
func (o *GetAPIV1AuthUsersIDUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1AuthUsersIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1AuthUsersIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1AuthUsersIDUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersIDInternalServerError creates a GetAPIV1AuthUsersIDInternalServerError with default headers values
func NewGetAPIV1AuthUsersIDInternalServerError() *GetAPIV1AuthUsersIDInternalServerError {
	return &GetAPIV1AuthUsersIDInternalServerError{}
}

/*
GetAPIV1AuthUsersIDInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1AuthUsersIDInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users Id internal server error response has a 2xx status code
func (o *GetAPIV1AuthUsersIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users Id internal server error response has a 3xx status code
func (o *GetAPIV1AuthUsersIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users Id internal server error response has a 4xx status code
func (o *GetAPIV1AuthUsersIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth users Id internal server error response has a 5xx status code
func (o *GetAPIV1AuthUsersIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 auth users Id internal server error response a status code equal to that given
func (o *GetAPIV1AuthUsersIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 auth users Id internal server error response
func (o *GetAPIV1AuthUsersIDInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1AuthUsersIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1AuthUsersIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/{id}][%d] getApiV1AuthUsersIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1AuthUsersIDInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
