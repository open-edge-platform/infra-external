// Code generated by go-swagger; DO NOT EDIT.

package authentication_and_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1AuthUsersReader is a Reader for the GetAPIV1AuthUsers structure.
type GetAPIV1AuthUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1AuthUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1AuthUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1AuthUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1AuthUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1AuthUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/auth/users/] GetAPIV1AuthUsers", response, response.Code())
	}
}

// NewGetAPIV1AuthUsersOK creates a GetAPIV1AuthUsersOK with default headers values
func NewGetAPIV1AuthUsersOK() *GetAPIV1AuthUsersOK {
	return &GetAPIV1AuthUsersOK{}
}

/*
GetAPIV1AuthUsersOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1AuthUsersOK struct {
	Payload *model.DtoUserListResponse
}

// IsSuccess returns true when this get Api v1 auth users o k response has a 2xx status code
func (o *GetAPIV1AuthUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 auth users o k response has a 3xx status code
func (o *GetAPIV1AuthUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users o k response has a 4xx status code
func (o *GetAPIV1AuthUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth users o k response has a 5xx status code
func (o *GetAPIV1AuthUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users o k response a status code equal to that given
func (o *GetAPIV1AuthUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 auth users o k response
func (o *GetAPIV1AuthUsersOK) Code() int {
	return 200
}

func (o *GetAPIV1AuthUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersOK %s", 200, payload)
}

func (o *GetAPIV1AuthUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersOK %s", 200, payload)
}

func (o *GetAPIV1AuthUsersOK) GetPayload() *model.DtoUserListResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoUserListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersBadRequest creates a GetAPIV1AuthUsersBadRequest with default headers values
func NewGetAPIV1AuthUsersBadRequest() *GetAPIV1AuthUsersBadRequest {
	return &GetAPIV1AuthUsersBadRequest{}
}

/*
GetAPIV1AuthUsersBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1AuthUsersBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users bad request response has a 2xx status code
func (o *GetAPIV1AuthUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users bad request response has a 3xx status code
func (o *GetAPIV1AuthUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users bad request response has a 4xx status code
func (o *GetAPIV1AuthUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth users bad request response has a 5xx status code
func (o *GetAPIV1AuthUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users bad request response a status code equal to that given
func (o *GetAPIV1AuthUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 auth users bad request response
func (o *GetAPIV1AuthUsersBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1AuthUsersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersBadRequest %s", 400, payload)
}

func (o *GetAPIV1AuthUsersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersBadRequest %s", 400, payload)
}

func (o *GetAPIV1AuthUsersBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersUnauthorized creates a GetAPIV1AuthUsersUnauthorized with default headers values
func NewGetAPIV1AuthUsersUnauthorized() *GetAPIV1AuthUsersUnauthorized {
	return &GetAPIV1AuthUsersUnauthorized{}
}

/*
GetAPIV1AuthUsersUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1AuthUsersUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users unauthorized response has a 2xx status code
func (o *GetAPIV1AuthUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users unauthorized response has a 3xx status code
func (o *GetAPIV1AuthUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users unauthorized response has a 4xx status code
func (o *GetAPIV1AuthUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth users unauthorized response has a 5xx status code
func (o *GetAPIV1AuthUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth users unauthorized response a status code equal to that given
func (o *GetAPIV1AuthUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 auth users unauthorized response
func (o *GetAPIV1AuthUsersUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1AuthUsersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersUnauthorized %s", 401, payload)
}

func (o *GetAPIV1AuthUsersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersUnauthorized %s", 401, payload)
}

func (o *GetAPIV1AuthUsersUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthUsersInternalServerError creates a GetAPIV1AuthUsersInternalServerError with default headers values
func NewGetAPIV1AuthUsersInternalServerError() *GetAPIV1AuthUsersInternalServerError {
	return &GetAPIV1AuthUsersInternalServerError{}
}

/*
GetAPIV1AuthUsersInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1AuthUsersInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 auth users internal server error response has a 2xx status code
func (o *GetAPIV1AuthUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth users internal server error response has a 3xx status code
func (o *GetAPIV1AuthUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth users internal server error response has a 4xx status code
func (o *GetAPIV1AuthUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth users internal server error response has a 5xx status code
func (o *GetAPIV1AuthUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 auth users internal server error response a status code equal to that given
func (o *GetAPIV1AuthUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 auth users internal server error response
func (o *GetAPIV1AuthUsersInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1AuthUsersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersInternalServerError %s", 500, payload)
}

func (o *GetAPIV1AuthUsersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/auth/users/][%d] getApiV1AuthUsersInternalServerError %s", 500, payload)
}

func (o *GetAPIV1AuthUsersInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1AuthUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
