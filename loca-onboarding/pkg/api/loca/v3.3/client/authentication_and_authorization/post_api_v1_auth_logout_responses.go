// Code generated by go-swagger; DO NOT EDIT.

package authentication_and_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1AuthLogoutReader is a Reader for the PostAPIV1AuthLogout structure.
type PostAPIV1AuthLogoutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1AuthLogoutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1AuthLogoutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1AuthLogoutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1AuthLogoutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1AuthLogoutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/auth/logout] PostAPIV1AuthLogout", response, response.Code())
	}
}

// NewPostAPIV1AuthLogoutOK creates a PostAPIV1AuthLogoutOK with default headers values
func NewPostAPIV1AuthLogoutOK() *PostAPIV1AuthLogoutOK {
	return &PostAPIV1AuthLogoutOK{}
}

/*
PostAPIV1AuthLogoutOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1AuthLogoutOK struct {
	Payload *model.DtoUserLogoutResponse
}

// IsSuccess returns true when this post Api v1 auth logout o k response has a 2xx status code
func (o *PostAPIV1AuthLogoutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 auth logout o k response has a 3xx status code
func (o *PostAPIV1AuthLogoutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth logout o k response has a 4xx status code
func (o *PostAPIV1AuthLogoutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 auth logout o k response has a 5xx status code
func (o *PostAPIV1AuthLogoutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth logout o k response a status code equal to that given
func (o *PostAPIV1AuthLogoutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 auth logout o k response
func (o *PostAPIV1AuthLogoutOK) Code() int {
	return 200
}

func (o *PostAPIV1AuthLogoutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutOK %s", 200, payload)
}

func (o *PostAPIV1AuthLogoutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutOK %s", 200, payload)
}

func (o *PostAPIV1AuthLogoutOK) GetPayload() *model.DtoUserLogoutResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLogoutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoUserLogoutResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLogoutBadRequest creates a PostAPIV1AuthLogoutBadRequest with default headers values
func NewPostAPIV1AuthLogoutBadRequest() *PostAPIV1AuthLogoutBadRequest {
	return &PostAPIV1AuthLogoutBadRequest{}
}

/*
PostAPIV1AuthLogoutBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1AuthLogoutBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth logout bad request response has a 2xx status code
func (o *PostAPIV1AuthLogoutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth logout bad request response has a 3xx status code
func (o *PostAPIV1AuthLogoutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth logout bad request response has a 4xx status code
func (o *PostAPIV1AuthLogoutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 auth logout bad request response has a 5xx status code
func (o *PostAPIV1AuthLogoutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth logout bad request response a status code equal to that given
func (o *PostAPIV1AuthLogoutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 auth logout bad request response
func (o *PostAPIV1AuthLogoutBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1AuthLogoutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutBadRequest %s", 400, payload)
}

func (o *PostAPIV1AuthLogoutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutBadRequest %s", 400, payload)
}

func (o *PostAPIV1AuthLogoutBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLogoutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLogoutUnauthorized creates a PostAPIV1AuthLogoutUnauthorized with default headers values
func NewPostAPIV1AuthLogoutUnauthorized() *PostAPIV1AuthLogoutUnauthorized {
	return &PostAPIV1AuthLogoutUnauthorized{}
}

/*
PostAPIV1AuthLogoutUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1AuthLogoutUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth logout unauthorized response has a 2xx status code
func (o *PostAPIV1AuthLogoutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth logout unauthorized response has a 3xx status code
func (o *PostAPIV1AuthLogoutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth logout unauthorized response has a 4xx status code
func (o *PostAPIV1AuthLogoutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 auth logout unauthorized response has a 5xx status code
func (o *PostAPIV1AuthLogoutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 auth logout unauthorized response a status code equal to that given
func (o *PostAPIV1AuthLogoutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 auth logout unauthorized response
func (o *PostAPIV1AuthLogoutUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1AuthLogoutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutUnauthorized %s", 401, payload)
}

func (o *PostAPIV1AuthLogoutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutUnauthorized %s", 401, payload)
}

func (o *PostAPIV1AuthLogoutUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLogoutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1AuthLogoutInternalServerError creates a PostAPIV1AuthLogoutInternalServerError with default headers values
func NewPostAPIV1AuthLogoutInternalServerError() *PostAPIV1AuthLogoutInternalServerError {
	return &PostAPIV1AuthLogoutInternalServerError{}
}

/*
PostAPIV1AuthLogoutInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1AuthLogoutInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 auth logout internal server error response has a 2xx status code
func (o *PostAPIV1AuthLogoutInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 auth logout internal server error response has a 3xx status code
func (o *PostAPIV1AuthLogoutInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 auth logout internal server error response has a 4xx status code
func (o *PostAPIV1AuthLogoutInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 auth logout internal server error response has a 5xx status code
func (o *PostAPIV1AuthLogoutInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 auth logout internal server error response a status code equal to that given
func (o *PostAPIV1AuthLogoutInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 auth logout internal server error response
func (o *PostAPIV1AuthLogoutInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1AuthLogoutInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutInternalServerError %s", 500, payload)
}

func (o *PostAPIV1AuthLogoutInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/auth/logout][%d] postApiV1AuthLogoutInternalServerError %s", 500, payload)
}

func (o *PostAPIV1AuthLogoutInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1AuthLogoutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
