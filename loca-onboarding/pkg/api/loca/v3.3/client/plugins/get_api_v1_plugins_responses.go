// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1PluginsReader is a Reader for the GetAPIV1Plugins structure.
type GetAPIV1PluginsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1PluginsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1PluginsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1PluginsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1PluginsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1PluginsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/plugins] GetAPIV1Plugins", response, response.Code())
	}
}

// NewGetAPIV1PluginsOK creates a GetAPIV1PluginsOK with default headers values
func NewGetAPIV1PluginsOK() *GetAPIV1PluginsOK {
	return &GetAPIV1PluginsOK{}
}

/*
GetAPIV1PluginsOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1PluginsOK struct {
	Payload *model.DtoPluginsResponse
}

// IsSuccess returns true when this get Api v1 plugins o k response has a 2xx status code
func (o *GetAPIV1PluginsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 plugins o k response has a 3xx status code
func (o *GetAPIV1PluginsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 plugins o k response has a 4xx status code
func (o *GetAPIV1PluginsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 plugins o k response has a 5xx status code
func (o *GetAPIV1PluginsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 plugins o k response a status code equal to that given
func (o *GetAPIV1PluginsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 plugins o k response
func (o *GetAPIV1PluginsOK) Code() int {
	return 200
}

func (o *GetAPIV1PluginsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsOK %s", 200, payload)
}

func (o *GetAPIV1PluginsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsOK %s", 200, payload)
}

func (o *GetAPIV1PluginsOK) GetPayload() *model.DtoPluginsResponse {
	return o.Payload
}

func (o *GetAPIV1PluginsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoPluginsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1PluginsBadRequest creates a GetAPIV1PluginsBadRequest with default headers values
func NewGetAPIV1PluginsBadRequest() *GetAPIV1PluginsBadRequest {
	return &GetAPIV1PluginsBadRequest{}
}

/*
GetAPIV1PluginsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1PluginsBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 plugins bad request response has a 2xx status code
func (o *GetAPIV1PluginsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 plugins bad request response has a 3xx status code
func (o *GetAPIV1PluginsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 plugins bad request response has a 4xx status code
func (o *GetAPIV1PluginsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 plugins bad request response has a 5xx status code
func (o *GetAPIV1PluginsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 plugins bad request response a status code equal to that given
func (o *GetAPIV1PluginsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 plugins bad request response
func (o *GetAPIV1PluginsBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1PluginsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsBadRequest %s", 400, payload)
}

func (o *GetAPIV1PluginsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsBadRequest %s", 400, payload)
}

func (o *GetAPIV1PluginsBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1PluginsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1PluginsUnauthorized creates a GetAPIV1PluginsUnauthorized with default headers values
func NewGetAPIV1PluginsUnauthorized() *GetAPIV1PluginsUnauthorized {
	return &GetAPIV1PluginsUnauthorized{}
}

/*
GetAPIV1PluginsUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1PluginsUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 plugins unauthorized response has a 2xx status code
func (o *GetAPIV1PluginsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 plugins unauthorized response has a 3xx status code
func (o *GetAPIV1PluginsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 plugins unauthorized response has a 4xx status code
func (o *GetAPIV1PluginsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 plugins unauthorized response has a 5xx status code
func (o *GetAPIV1PluginsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 plugins unauthorized response a status code equal to that given
func (o *GetAPIV1PluginsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 plugins unauthorized response
func (o *GetAPIV1PluginsUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1PluginsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsUnauthorized %s", 401, payload)
}

func (o *GetAPIV1PluginsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsUnauthorized %s", 401, payload)
}

func (o *GetAPIV1PluginsUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1PluginsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1PluginsInternalServerError creates a GetAPIV1PluginsInternalServerError with default headers values
func NewGetAPIV1PluginsInternalServerError() *GetAPIV1PluginsInternalServerError {
	return &GetAPIV1PluginsInternalServerError{}
}

/*
GetAPIV1PluginsInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1PluginsInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 plugins internal server error response has a 2xx status code
func (o *GetAPIV1PluginsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 plugins internal server error response has a 3xx status code
func (o *GetAPIV1PluginsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 plugins internal server error response has a 4xx status code
func (o *GetAPIV1PluginsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 plugins internal server error response has a 5xx status code
func (o *GetAPIV1PluginsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 plugins internal server error response a status code equal to that given
func (o *GetAPIV1PluginsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 plugins internal server error response
func (o *GetAPIV1PluginsInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1PluginsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsInternalServerError %s", 500, payload)
}

func (o *GetAPIV1PluginsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/plugins][%d] getApiV1PluginsInternalServerError %s", 500, payload)
}

func (o *GetAPIV1PluginsInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1PluginsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
