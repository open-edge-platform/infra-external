// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1InventoryIPRangesReader is a Reader for the GetAPIV1InventoryIPRanges structure.
type GetAPIV1InventoryIPRangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InventoryIPRangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InventoryIPRangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1InventoryIPRangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1InventoryIPRangesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InventoryIPRangesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/inventory/ip-ranges] GetAPIV1InventoryIPRanges", response, response.Code())
	}
}

// NewGetAPIV1InventoryIPRangesOK creates a GetAPIV1InventoryIPRangesOK with default headers values
func NewGetAPIV1InventoryIPRangesOK() *GetAPIV1InventoryIPRangesOK {
	return &GetAPIV1InventoryIPRangesOK{}
}

/*
GetAPIV1InventoryIPRangesOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1InventoryIPRangesOK struct {
	Payload *model.DtoIPRangeListResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges o k response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges o k response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges o k response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory Ip ranges o k response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory Ip ranges o k response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 inventory Ip ranges o k response
func (o *GetAPIV1InventoryIPRangesOK) Code() int {
	return 200
}

func (o *GetAPIV1InventoryIPRangesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesOK %s", 200, payload)
}

func (o *GetAPIV1InventoryIPRangesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesOK %s", 200, payload)
}

func (o *GetAPIV1InventoryIPRangesOK) GetPayload() *model.DtoIPRangeListResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoIPRangeListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryIPRangesBadRequest creates a GetAPIV1InventoryIPRangesBadRequest with default headers values
func NewGetAPIV1InventoryIPRangesBadRequest() *GetAPIV1InventoryIPRangesBadRequest {
	return &GetAPIV1InventoryIPRangesBadRequest{}
}

/*
GetAPIV1InventoryIPRangesBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1InventoryIPRangesBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges bad request response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges bad request response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges bad request response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory Ip ranges bad request response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory Ip ranges bad request response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 inventory Ip ranges bad request response
func (o *GetAPIV1InventoryIPRangesBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1InventoryIPRangesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryIPRangesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryIPRangesBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryIPRangesUnauthorized creates a GetAPIV1InventoryIPRangesUnauthorized with default headers values
func NewGetAPIV1InventoryIPRangesUnauthorized() *GetAPIV1InventoryIPRangesUnauthorized {
	return &GetAPIV1InventoryIPRangesUnauthorized{}
}

/*
GetAPIV1InventoryIPRangesUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1InventoryIPRangesUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges unauthorized response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges unauthorized response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges unauthorized response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory Ip ranges unauthorized response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory Ip ranges unauthorized response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 inventory Ip ranges unauthorized response
func (o *GetAPIV1InventoryIPRangesUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1InventoryIPRangesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryIPRangesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryIPRangesUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryIPRangesInternalServerError creates a GetAPIV1InventoryIPRangesInternalServerError with default headers values
func NewGetAPIV1InventoryIPRangesInternalServerError() *GetAPIV1InventoryIPRangesInternalServerError {
	return &GetAPIV1InventoryIPRangesInternalServerError{}
}

/*
GetAPIV1InventoryIPRangesInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1InventoryIPRangesInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges internal server error response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges internal server error response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges internal server error response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory Ip ranges internal server error response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 inventory Ip ranges internal server error response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 inventory Ip ranges internal server error response
func (o *GetAPIV1InventoryIPRangesInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1InventoryIPRangesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryIPRangesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges][%d] getApiV1InventoryIpRangesInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryIPRangesInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
