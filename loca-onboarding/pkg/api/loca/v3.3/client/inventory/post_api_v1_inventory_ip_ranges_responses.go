// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1InventoryIPRangesReader is a Reader for the PostAPIV1InventoryIPRanges structure.
type PostAPIV1InventoryIPRangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1InventoryIPRangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAPIV1InventoryIPRangesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1InventoryIPRangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1InventoryIPRangesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1InventoryIPRangesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/inventory/ip-ranges] PostAPIV1InventoryIPRanges", response, response.Code())
	}
}

// NewPostAPIV1InventoryIPRangesCreated creates a PostAPIV1InventoryIPRangesCreated with default headers values
func NewPostAPIV1InventoryIPRangesCreated() *PostAPIV1InventoryIPRangesCreated {
	return &PostAPIV1InventoryIPRangesCreated{}
}

/*
PostAPIV1InventoryIPRangesCreated describes a response with status code 201, with default header values.

IP ranges created successfully
*/
type PostAPIV1InventoryIPRangesCreated struct {
	Payload *model.DtoIPRangesCreatedResponse
}

// IsSuccess returns true when this post Api v1 inventory Ip ranges created response has a 2xx status code
func (o *PostAPIV1InventoryIPRangesCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 inventory Ip ranges created response has a 3xx status code
func (o *PostAPIV1InventoryIPRangesCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory Ip ranges created response has a 4xx status code
func (o *PostAPIV1InventoryIPRangesCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory Ip ranges created response has a 5xx status code
func (o *PostAPIV1InventoryIPRangesCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory Ip ranges created response a status code equal to that given
func (o *PostAPIV1InventoryIPRangesCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post Api v1 inventory Ip ranges created response
func (o *PostAPIV1InventoryIPRangesCreated) Code() int {
	return 201
}

func (o *PostAPIV1InventoryIPRangesCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesCreated %s", 201, payload)
}

func (o *PostAPIV1InventoryIPRangesCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesCreated %s", 201, payload)
}

func (o *PostAPIV1InventoryIPRangesCreated) GetPayload() *model.DtoIPRangesCreatedResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryIPRangesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoIPRangesCreatedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryIPRangesBadRequest creates a PostAPIV1InventoryIPRangesBadRequest with default headers values
func NewPostAPIV1InventoryIPRangesBadRequest() *PostAPIV1InventoryIPRangesBadRequest {
	return &PostAPIV1InventoryIPRangesBadRequest{}
}

/*
PostAPIV1InventoryIPRangesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostAPIV1InventoryIPRangesBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory Ip ranges bad request response has a 2xx status code
func (o *PostAPIV1InventoryIPRangesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory Ip ranges bad request response has a 3xx status code
func (o *PostAPIV1InventoryIPRangesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory Ip ranges bad request response has a 4xx status code
func (o *PostAPIV1InventoryIPRangesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory Ip ranges bad request response has a 5xx status code
func (o *PostAPIV1InventoryIPRangesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory Ip ranges bad request response a status code equal to that given
func (o *PostAPIV1InventoryIPRangesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 inventory Ip ranges bad request response
func (o *PostAPIV1InventoryIPRangesBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1InventoryIPRangesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryIPRangesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryIPRangesBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryIPRangesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryIPRangesUnauthorized creates a PostAPIV1InventoryIPRangesUnauthorized with default headers values
func NewPostAPIV1InventoryIPRangesUnauthorized() *PostAPIV1InventoryIPRangesUnauthorized {
	return &PostAPIV1InventoryIPRangesUnauthorized{}
}

/*
PostAPIV1InventoryIPRangesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostAPIV1InventoryIPRangesUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory Ip ranges unauthorized response has a 2xx status code
func (o *PostAPIV1InventoryIPRangesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory Ip ranges unauthorized response has a 3xx status code
func (o *PostAPIV1InventoryIPRangesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory Ip ranges unauthorized response has a 4xx status code
func (o *PostAPIV1InventoryIPRangesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory Ip ranges unauthorized response has a 5xx status code
func (o *PostAPIV1InventoryIPRangesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory Ip ranges unauthorized response a status code equal to that given
func (o *PostAPIV1InventoryIPRangesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 inventory Ip ranges unauthorized response
func (o *PostAPIV1InventoryIPRangesUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1InventoryIPRangesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryIPRangesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryIPRangesUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryIPRangesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryIPRangesInternalServerError creates a PostAPIV1InventoryIPRangesInternalServerError with default headers values
func NewPostAPIV1InventoryIPRangesInternalServerError() *PostAPIV1InventoryIPRangesInternalServerError {
	return &PostAPIV1InventoryIPRangesInternalServerError{}
}

/*
PostAPIV1InventoryIPRangesInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1InventoryIPRangesInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory Ip ranges internal server error response has a 2xx status code
func (o *PostAPIV1InventoryIPRangesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory Ip ranges internal server error response has a 3xx status code
func (o *PostAPIV1InventoryIPRangesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory Ip ranges internal server error response has a 4xx status code
func (o *PostAPIV1InventoryIPRangesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory Ip ranges internal server error response has a 5xx status code
func (o *PostAPIV1InventoryIPRangesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 inventory Ip ranges internal server error response a status code equal to that given
func (o *PostAPIV1InventoryIPRangesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 inventory Ip ranges internal server error response
func (o *PostAPIV1InventoryIPRangesInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1InventoryIPRangesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryIPRangesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/ip-ranges][%d] postApiV1InventoryIpRangesInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryIPRangesInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryIPRangesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
