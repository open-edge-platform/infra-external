// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1InventoryRepositoryReader is a Reader for the GetAPIV1InventoryRepository structure.
type GetAPIV1InventoryRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InventoryRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InventoryRepositoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1InventoryRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1InventoryRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InventoryRepositoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/inventory/repository] GetAPIV1InventoryRepository", response, response.Code())
	}
}

// NewGetAPIV1InventoryRepositoryOK creates a GetAPIV1InventoryRepositoryOK with default headers values
func NewGetAPIV1InventoryRepositoryOK() *GetAPIV1InventoryRepositoryOK {
	return &GetAPIV1InventoryRepositoryOK{}
}

/*
GetAPIV1InventoryRepositoryOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1InventoryRepositoryOK struct {
	Payload *model.DtoRepositoryListResponse
}

// IsSuccess returns true when this get Api v1 inventory repository o k response has a 2xx status code
func (o *GetAPIV1InventoryRepositoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 inventory repository o k response has a 3xx status code
func (o *GetAPIV1InventoryRepositoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory repository o k response has a 4xx status code
func (o *GetAPIV1InventoryRepositoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory repository o k response has a 5xx status code
func (o *GetAPIV1InventoryRepositoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory repository o k response a status code equal to that given
func (o *GetAPIV1InventoryRepositoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 inventory repository o k response
func (o *GetAPIV1InventoryRepositoryOK) Code() int {
	return 200
}

func (o *GetAPIV1InventoryRepositoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryOK %s", 200, payload)
}

func (o *GetAPIV1InventoryRepositoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryOK %s", 200, payload)
}

func (o *GetAPIV1InventoryRepositoryOK) GetPayload() *model.DtoRepositoryListResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryRepositoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoRepositoryListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryRepositoryBadRequest creates a GetAPIV1InventoryRepositoryBadRequest with default headers values
func NewGetAPIV1InventoryRepositoryBadRequest() *GetAPIV1InventoryRepositoryBadRequest {
	return &GetAPIV1InventoryRepositoryBadRequest{}
}

/*
GetAPIV1InventoryRepositoryBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1InventoryRepositoryBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory repository bad request response has a 2xx status code
func (o *GetAPIV1InventoryRepositoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory repository bad request response has a 3xx status code
func (o *GetAPIV1InventoryRepositoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory repository bad request response has a 4xx status code
func (o *GetAPIV1InventoryRepositoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory repository bad request response has a 5xx status code
func (o *GetAPIV1InventoryRepositoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory repository bad request response a status code equal to that given
func (o *GetAPIV1InventoryRepositoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 inventory repository bad request response
func (o *GetAPIV1InventoryRepositoryBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1InventoryRepositoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryRepositoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryRepositoryBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryRepositoryUnauthorized creates a GetAPIV1InventoryRepositoryUnauthorized with default headers values
func NewGetAPIV1InventoryRepositoryUnauthorized() *GetAPIV1InventoryRepositoryUnauthorized {
	return &GetAPIV1InventoryRepositoryUnauthorized{}
}

/*
GetAPIV1InventoryRepositoryUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1InventoryRepositoryUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory repository unauthorized response has a 2xx status code
func (o *GetAPIV1InventoryRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory repository unauthorized response has a 3xx status code
func (o *GetAPIV1InventoryRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory repository unauthorized response has a 4xx status code
func (o *GetAPIV1InventoryRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory repository unauthorized response has a 5xx status code
func (o *GetAPIV1InventoryRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory repository unauthorized response a status code equal to that given
func (o *GetAPIV1InventoryRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 inventory repository unauthorized response
func (o *GetAPIV1InventoryRepositoryUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1InventoryRepositoryUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryRepositoryUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryRepositoryUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryRepositoryInternalServerError creates a GetAPIV1InventoryRepositoryInternalServerError with default headers values
func NewGetAPIV1InventoryRepositoryInternalServerError() *GetAPIV1InventoryRepositoryInternalServerError {
	return &GetAPIV1InventoryRepositoryInternalServerError{}
}

/*
GetAPIV1InventoryRepositoryInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1InventoryRepositoryInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory repository internal server error response has a 2xx status code
func (o *GetAPIV1InventoryRepositoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory repository internal server error response has a 3xx status code
func (o *GetAPIV1InventoryRepositoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory repository internal server error response has a 4xx status code
func (o *GetAPIV1InventoryRepositoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory repository internal server error response has a 5xx status code
func (o *GetAPIV1InventoryRepositoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 inventory repository internal server error response a status code equal to that given
func (o *GetAPIV1InventoryRepositoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 inventory repository internal server error response
func (o *GetAPIV1InventoryRepositoryInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1InventoryRepositoryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryRepositoryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/repository][%d] getApiV1InventoryRepositoryInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryRepositoryInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryRepositoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
