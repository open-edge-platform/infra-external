// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1InventoryRepositoryUploadReader is a Reader for the PostAPIV1InventoryRepositoryUpload structure.
type PostAPIV1InventoryRepositoryUploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1InventoryRepositoryUploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1InventoryRepositoryUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1InventoryRepositoryUploadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1InventoryRepositoryUploadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1InventoryRepositoryUploadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/inventory/repository/upload] PostAPIV1InventoryRepositoryUpload", response, response.Code())
	}
}

// NewPostAPIV1InventoryRepositoryUploadOK creates a PostAPIV1InventoryRepositoryUploadOK with default headers values
func NewPostAPIV1InventoryRepositoryUploadOK() *PostAPIV1InventoryRepositoryUploadOK {
	return &PostAPIV1InventoryRepositoryUploadOK{}
}

/*
PostAPIV1InventoryRepositoryUploadOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1InventoryRepositoryUploadOK struct {
	Payload *model.DtoRepositoryUploadResponse
}

// IsSuccess returns true when this post Api v1 inventory repository upload o k response has a 2xx status code
func (o *PostAPIV1InventoryRepositoryUploadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 inventory repository upload o k response has a 3xx status code
func (o *PostAPIV1InventoryRepositoryUploadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory repository upload o k response has a 4xx status code
func (o *PostAPIV1InventoryRepositoryUploadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory repository upload o k response has a 5xx status code
func (o *PostAPIV1InventoryRepositoryUploadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory repository upload o k response a status code equal to that given
func (o *PostAPIV1InventoryRepositoryUploadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 inventory repository upload o k response
func (o *PostAPIV1InventoryRepositoryUploadOK) Code() int {
	return 200
}

func (o *PostAPIV1InventoryRepositoryUploadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadOK %s", 200, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadOK %s", 200, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadOK) GetPayload() *model.DtoRepositoryUploadResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryRepositoryUploadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoRepositoryUploadResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryRepositoryUploadBadRequest creates a PostAPIV1InventoryRepositoryUploadBadRequest with default headers values
func NewPostAPIV1InventoryRepositoryUploadBadRequest() *PostAPIV1InventoryRepositoryUploadBadRequest {
	return &PostAPIV1InventoryRepositoryUploadBadRequest{}
}

/*
PostAPIV1InventoryRepositoryUploadBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1InventoryRepositoryUploadBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory repository upload bad request response has a 2xx status code
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory repository upload bad request response has a 3xx status code
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory repository upload bad request response has a 4xx status code
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory repository upload bad request response has a 5xx status code
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory repository upload bad request response a status code equal to that given
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 inventory repository upload bad request response
func (o *PostAPIV1InventoryRepositoryUploadBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1InventoryRepositoryUploadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryRepositoryUploadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryRepositoryUploadUnauthorized creates a PostAPIV1InventoryRepositoryUploadUnauthorized with default headers values
func NewPostAPIV1InventoryRepositoryUploadUnauthorized() *PostAPIV1InventoryRepositoryUploadUnauthorized {
	return &PostAPIV1InventoryRepositoryUploadUnauthorized{}
}

/*
PostAPIV1InventoryRepositoryUploadUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1InventoryRepositoryUploadUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory repository upload unauthorized response has a 2xx status code
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory repository upload unauthorized response has a 3xx status code
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory repository upload unauthorized response has a 4xx status code
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory repository upload unauthorized response has a 5xx status code
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory repository upload unauthorized response a status code equal to that given
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 inventory repository upload unauthorized response
func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryRepositoryUploadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryRepositoryUploadInternalServerError creates a PostAPIV1InventoryRepositoryUploadInternalServerError with default headers values
func NewPostAPIV1InventoryRepositoryUploadInternalServerError() *PostAPIV1InventoryRepositoryUploadInternalServerError {
	return &PostAPIV1InventoryRepositoryUploadInternalServerError{}
}

/*
PostAPIV1InventoryRepositoryUploadInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1InventoryRepositoryUploadInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory repository upload internal server error response has a 2xx status code
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory repository upload internal server error response has a 3xx status code
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory repository upload internal server error response has a 4xx status code
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory repository upload internal server error response has a 5xx status code
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 inventory repository upload internal server error response a status code equal to that given
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 inventory repository upload internal server error response
func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/repository/upload][%d] postApiV1InventoryRepositoryUploadInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryRepositoryUploadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
