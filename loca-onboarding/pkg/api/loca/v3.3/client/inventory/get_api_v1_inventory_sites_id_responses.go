// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1InventorySitesIDReader is a Reader for the GetAPIV1InventorySitesID structure.
type GetAPIV1InventorySitesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InventorySitesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InventorySitesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1InventorySitesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1InventorySitesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InventorySitesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/inventory/sites/{id}] GetAPIV1InventorySitesID", response, response.Code())
	}
}

// NewGetAPIV1InventorySitesIDOK creates a GetAPIV1InventorySitesIDOK with default headers values
func NewGetAPIV1InventorySitesIDOK() *GetAPIV1InventorySitesIDOK {
	return &GetAPIV1InventorySitesIDOK{}
}

/*
GetAPIV1InventorySitesIDOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1InventorySitesIDOK struct {
	Payload *model.DtoSiteQueryResponse
}

// IsSuccess returns true when this get Api v1 inventory sites Id o k response has a 2xx status code
func (o *GetAPIV1InventorySitesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 inventory sites Id o k response has a 3xx status code
func (o *GetAPIV1InventorySitesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory sites Id o k response has a 4xx status code
func (o *GetAPIV1InventorySitesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory sites Id o k response has a 5xx status code
func (o *GetAPIV1InventorySitesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory sites Id o k response a status code equal to that given
func (o *GetAPIV1InventorySitesIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 inventory sites Id o k response
func (o *GetAPIV1InventorySitesIDOK) Code() int {
	return 200
}

func (o *GetAPIV1InventorySitesIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdOK %s", 200, payload)
}

func (o *GetAPIV1InventorySitesIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdOK %s", 200, payload)
}

func (o *GetAPIV1InventorySitesIDOK) GetPayload() *model.DtoSiteQueryResponse {
	return o.Payload
}

func (o *GetAPIV1InventorySitesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoSiteQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventorySitesIDBadRequest creates a GetAPIV1InventorySitesIDBadRequest with default headers values
func NewGetAPIV1InventorySitesIDBadRequest() *GetAPIV1InventorySitesIDBadRequest {
	return &GetAPIV1InventorySitesIDBadRequest{}
}

/*
GetAPIV1InventorySitesIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1InventorySitesIDBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory sites Id bad request response has a 2xx status code
func (o *GetAPIV1InventorySitesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory sites Id bad request response has a 3xx status code
func (o *GetAPIV1InventorySitesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory sites Id bad request response has a 4xx status code
func (o *GetAPIV1InventorySitesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory sites Id bad request response has a 5xx status code
func (o *GetAPIV1InventorySitesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory sites Id bad request response a status code equal to that given
func (o *GetAPIV1InventorySitesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 inventory sites Id bad request response
func (o *GetAPIV1InventorySitesIDBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1InventorySitesIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventorySitesIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventorySitesIDBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventorySitesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventorySitesIDUnauthorized creates a GetAPIV1InventorySitesIDUnauthorized with default headers values
func NewGetAPIV1InventorySitesIDUnauthorized() *GetAPIV1InventorySitesIDUnauthorized {
	return &GetAPIV1InventorySitesIDUnauthorized{}
}

/*
GetAPIV1InventorySitesIDUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1InventorySitesIDUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory sites Id unauthorized response has a 2xx status code
func (o *GetAPIV1InventorySitesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory sites Id unauthorized response has a 3xx status code
func (o *GetAPIV1InventorySitesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory sites Id unauthorized response has a 4xx status code
func (o *GetAPIV1InventorySitesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory sites Id unauthorized response has a 5xx status code
func (o *GetAPIV1InventorySitesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory sites Id unauthorized response a status code equal to that given
func (o *GetAPIV1InventorySitesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 inventory sites Id unauthorized response
func (o *GetAPIV1InventorySitesIDUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1InventorySitesIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventorySitesIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventorySitesIDUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventorySitesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventorySitesIDInternalServerError creates a GetAPIV1InventorySitesIDInternalServerError with default headers values
func NewGetAPIV1InventorySitesIDInternalServerError() *GetAPIV1InventorySitesIDInternalServerError {
	return &GetAPIV1InventorySitesIDInternalServerError{}
}

/*
GetAPIV1InventorySitesIDInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1InventorySitesIDInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory sites Id internal server error response has a 2xx status code
func (o *GetAPIV1InventorySitesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory sites Id internal server error response has a 3xx status code
func (o *GetAPIV1InventorySitesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory sites Id internal server error response has a 4xx status code
func (o *GetAPIV1InventorySitesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory sites Id internal server error response has a 5xx status code
func (o *GetAPIV1InventorySitesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 inventory sites Id internal server error response a status code equal to that given
func (o *GetAPIV1InventorySitesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 inventory sites Id internal server error response
func (o *GetAPIV1InventorySitesIDInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1InventorySitesIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventorySitesIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/sites/{id}][%d] getApiV1InventorySitesIdInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventorySitesIDInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventorySitesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
