// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1InventoryDevicesIDUpdateReader is a Reader for the PostAPIV1InventoryDevicesIDUpdate structure.
type PostAPIV1InventoryDevicesIDUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1InventoryDevicesIDUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1InventoryDevicesIDUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1InventoryDevicesIDUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1InventoryDevicesIDUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1InventoryDevicesIDUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/inventory/devices/{id}/update] PostAPIV1InventoryDevicesIDUpdate", response, response.Code())
	}
}

// NewPostAPIV1InventoryDevicesIDUpdateOK creates a PostAPIV1InventoryDevicesIDUpdateOK with default headers values
func NewPostAPIV1InventoryDevicesIDUpdateOK() *PostAPIV1InventoryDevicesIDUpdateOK {
	return &PostAPIV1InventoryDevicesIDUpdateOK{}
}

/*
PostAPIV1InventoryDevicesIDUpdateOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1InventoryDevicesIDUpdateOK struct {
	Payload *model.DtoDeviceUpdateResponse
}

// IsSuccess returns true when this post Api v1 inventory devices Id update o k response has a 2xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 inventory devices Id update o k response has a 3xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory devices Id update o k response has a 4xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory devices Id update o k response has a 5xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory devices Id update o k response a status code equal to that given
func (o *PostAPIV1InventoryDevicesIDUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 inventory devices Id update o k response
func (o *PostAPIV1InventoryDevicesIDUpdateOK) Code() int {
	return 200
}

func (o *PostAPIV1InventoryDevicesIDUpdateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateOK %s", 200, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateOK %s", 200, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateOK) GetPayload() *model.DtoDeviceUpdateResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryDevicesIDUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoDeviceUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryDevicesIDUpdateBadRequest creates a PostAPIV1InventoryDevicesIDUpdateBadRequest with default headers values
func NewPostAPIV1InventoryDevicesIDUpdateBadRequest() *PostAPIV1InventoryDevicesIDUpdateBadRequest {
	return &PostAPIV1InventoryDevicesIDUpdateBadRequest{}
}

/*
PostAPIV1InventoryDevicesIDUpdateBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1InventoryDevicesIDUpdateBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory devices Id update bad request response has a 2xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory devices Id update bad request response has a 3xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory devices Id update bad request response has a 4xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory devices Id update bad request response has a 5xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory devices Id update bad request response a status code equal to that given
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 inventory devices Id update bad request response
func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryDevicesIDUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryDevicesIDUpdateUnauthorized creates a PostAPIV1InventoryDevicesIDUpdateUnauthorized with default headers values
func NewPostAPIV1InventoryDevicesIDUpdateUnauthorized() *PostAPIV1InventoryDevicesIDUpdateUnauthorized {
	return &PostAPIV1InventoryDevicesIDUpdateUnauthorized{}
}

/*
PostAPIV1InventoryDevicesIDUpdateUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1InventoryDevicesIDUpdateUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory devices Id update unauthorized response has a 2xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory devices Id update unauthorized response has a 3xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory devices Id update unauthorized response has a 4xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory devices Id update unauthorized response has a 5xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory devices Id update unauthorized response a status code equal to that given
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 inventory devices Id update unauthorized response
func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryDevicesIDUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryDevicesIDUpdateInternalServerError creates a PostAPIV1InventoryDevicesIDUpdateInternalServerError with default headers values
func NewPostAPIV1InventoryDevicesIDUpdateInternalServerError() *PostAPIV1InventoryDevicesIDUpdateInternalServerError {
	return &PostAPIV1InventoryDevicesIDUpdateInternalServerError{}
}

/*
PostAPIV1InventoryDevicesIDUpdateInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1InventoryDevicesIDUpdateInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory devices Id update internal server error response has a 2xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory devices Id update internal server error response has a 3xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory devices Id update internal server error response has a 4xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory devices Id update internal server error response has a 5xx status code
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 inventory devices Id update internal server error response a status code equal to that given
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 inventory devices Id update internal server error response
func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/devices/{id}/update][%d] postApiV1InventoryDevicesIdUpdateInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryDevicesIDUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
