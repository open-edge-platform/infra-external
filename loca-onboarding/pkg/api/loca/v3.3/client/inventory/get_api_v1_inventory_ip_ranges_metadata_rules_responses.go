// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1InventoryIPRangesMetadataRulesReader is a Reader for the GetAPIV1InventoryIPRangesMetadataRules structure.
type GetAPIV1InventoryIPRangesMetadataRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InventoryIPRangesMetadataRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InventoryIPRangesMetadataRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAPIV1InventoryIPRangesMetadataRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InventoryIPRangesMetadataRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/inventory/ip-ranges/metadata-rules] GetAPIV1InventoryIPRangesMetadataRules", response, response.Code())
	}
}

// NewGetAPIV1InventoryIPRangesMetadataRulesOK creates a GetAPIV1InventoryIPRangesMetadataRulesOK with default headers values
func NewGetAPIV1InventoryIPRangesMetadataRulesOK() *GetAPIV1InventoryIPRangesMetadataRulesOK {
	return &GetAPIV1InventoryIPRangesMetadataRulesOK{}
}

/*
GetAPIV1InventoryIPRangesMetadataRulesOK describes a response with status code 200, with default header values.

Successfully retrieved IP range metadata rules
*/
type GetAPIV1InventoryIPRangesMetadataRulesOK struct {
	Payload *model.DtoDtoSettingRuleListResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges metadata rules o k response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges metadata rules o k response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges metadata rules o k response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory Ip ranges metadata rules o k response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory Ip ranges metadata rules o k response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 inventory Ip ranges metadata rules o k response
func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) Code() int {
	return 200
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesOK %s", 200, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesOK %s", 200, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) GetPayload() *model.DtoDtoSettingRuleListResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoDtoSettingRuleListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryIPRangesMetadataRulesUnauthorized creates a GetAPIV1InventoryIPRangesMetadataRulesUnauthorized with default headers values
func NewGetAPIV1InventoryIPRangesMetadataRulesUnauthorized() *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized {
	return &GetAPIV1InventoryIPRangesMetadataRulesUnauthorized{}
}

/*
GetAPIV1InventoryIPRangesMetadataRulesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAPIV1InventoryIPRangesMetadataRulesUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges metadata rules unauthorized response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges metadata rules unauthorized response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges metadata rules unauthorized response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory Ip ranges metadata rules unauthorized response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory Ip ranges metadata rules unauthorized response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 inventory Ip ranges metadata rules unauthorized response
func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryIPRangesMetadataRulesInternalServerError creates a GetAPIV1InventoryIPRangesMetadataRulesInternalServerError with default headers values
func NewGetAPIV1InventoryIPRangesMetadataRulesInternalServerError() *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError {
	return &GetAPIV1InventoryIPRangesMetadataRulesInternalServerError{}
}

/*
GetAPIV1InventoryIPRangesMetadataRulesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAPIV1InventoryIPRangesMetadataRulesInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory Ip ranges metadata rules internal server error response has a 2xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory Ip ranges metadata rules internal server error response has a 3xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory Ip ranges metadata rules internal server error response has a 4xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory Ip ranges metadata rules internal server error response has a 5xx status code
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 inventory Ip ranges metadata rules internal server error response a status code equal to that given
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 inventory Ip ranges metadata rules internal server error response
func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/ip-ranges/metadata-rules][%d] getApiV1InventoryIpRangesMetadataRulesInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryIPRangesMetadataRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
