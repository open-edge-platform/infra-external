// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1InventoryUploadReader is a Reader for the PostAPIV1InventoryUpload structure.
type PostAPIV1InventoryUploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1InventoryUploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1InventoryUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1InventoryUploadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAPIV1InventoryUploadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1InventoryUploadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/inventory/upload] PostAPIV1InventoryUpload", response, response.Code())
	}
}

// NewPostAPIV1InventoryUploadOK creates a PostAPIV1InventoryUploadOK with default headers values
func NewPostAPIV1InventoryUploadOK() *PostAPIV1InventoryUploadOK {
	return &PostAPIV1InventoryUploadOK{}
}

/*
PostAPIV1InventoryUploadOK describes a response with status code 200, with default header values.

success
*/
type PostAPIV1InventoryUploadOK struct {
	Payload *model.DtoResponseCUD
}

// IsSuccess returns true when this post Api v1 inventory upload o k response has a 2xx status code
func (o *PostAPIV1InventoryUploadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 inventory upload o k response has a 3xx status code
func (o *PostAPIV1InventoryUploadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory upload o k response has a 4xx status code
func (o *PostAPIV1InventoryUploadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory upload o k response has a 5xx status code
func (o *PostAPIV1InventoryUploadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory upload o k response a status code equal to that given
func (o *PostAPIV1InventoryUploadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post Api v1 inventory upload o k response
func (o *PostAPIV1InventoryUploadOK) Code() int {
	return 200
}

func (o *PostAPIV1InventoryUploadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadOK %s", 200, payload)
}

func (o *PostAPIV1InventoryUploadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadOK %s", 200, payload)
}

func (o *PostAPIV1InventoryUploadOK) GetPayload() *model.DtoResponseCUD {
	return o.Payload
}

func (o *PostAPIV1InventoryUploadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoResponseCUD)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryUploadBadRequest creates a PostAPIV1InventoryUploadBadRequest with default headers values
func NewPostAPIV1InventoryUploadBadRequest() *PostAPIV1InventoryUploadBadRequest {
	return &PostAPIV1InventoryUploadBadRequest{}
}

/*
PostAPIV1InventoryUploadBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostAPIV1InventoryUploadBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory upload bad request response has a 2xx status code
func (o *PostAPIV1InventoryUploadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory upload bad request response has a 3xx status code
func (o *PostAPIV1InventoryUploadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory upload bad request response has a 4xx status code
func (o *PostAPIV1InventoryUploadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory upload bad request response has a 5xx status code
func (o *PostAPIV1InventoryUploadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory upload bad request response a status code equal to that given
func (o *PostAPIV1InventoryUploadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 inventory upload bad request response
func (o *PostAPIV1InventoryUploadBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1InventoryUploadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryUploadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadBadRequest %s", 400, payload)
}

func (o *PostAPIV1InventoryUploadBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryUploadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryUploadUnauthorized creates a PostAPIV1InventoryUploadUnauthorized with default headers values
func NewPostAPIV1InventoryUploadUnauthorized() *PostAPIV1InventoryUploadUnauthorized {
	return &PostAPIV1InventoryUploadUnauthorized{}
}

/*
PostAPIV1InventoryUploadUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type PostAPIV1InventoryUploadUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory upload unauthorized response has a 2xx status code
func (o *PostAPIV1InventoryUploadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory upload unauthorized response has a 3xx status code
func (o *PostAPIV1InventoryUploadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory upload unauthorized response has a 4xx status code
func (o *PostAPIV1InventoryUploadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 inventory upload unauthorized response has a 5xx status code
func (o *PostAPIV1InventoryUploadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 inventory upload unauthorized response a status code equal to that given
func (o *PostAPIV1InventoryUploadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post Api v1 inventory upload unauthorized response
func (o *PostAPIV1InventoryUploadUnauthorized) Code() int {
	return 401
}

func (o *PostAPIV1InventoryUploadUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryUploadUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadUnauthorized %s", 401, payload)
}

func (o *PostAPIV1InventoryUploadUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryUploadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1InventoryUploadInternalServerError creates a PostAPIV1InventoryUploadInternalServerError with default headers values
func NewPostAPIV1InventoryUploadInternalServerError() *PostAPIV1InventoryUploadInternalServerError {
	return &PostAPIV1InventoryUploadInternalServerError{}
}

/*
PostAPIV1InventoryUploadInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PostAPIV1InventoryUploadInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 inventory upload internal server error response has a 2xx status code
func (o *PostAPIV1InventoryUploadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 inventory upload internal server error response has a 3xx status code
func (o *PostAPIV1InventoryUploadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 inventory upload internal server error response has a 4xx status code
func (o *PostAPIV1InventoryUploadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 inventory upload internal server error response has a 5xx status code
func (o *PostAPIV1InventoryUploadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post Api v1 inventory upload internal server error response a status code equal to that given
func (o *PostAPIV1InventoryUploadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post Api v1 inventory upload internal server error response
func (o *PostAPIV1InventoryUploadInternalServerError) Code() int {
	return 500
}

func (o *PostAPIV1InventoryUploadInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryUploadInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/inventory/upload][%d] postApiV1InventoryUploadInternalServerError %s", 500, payload)
}

func (o *PostAPIV1InventoryUploadInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1InventoryUploadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
