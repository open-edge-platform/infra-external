// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1InventoryDevicesRegistrationFileDownloadReader is a Reader for the GetAPIV1InventoryDevicesRegistrationFileDownload structure.
type GetAPIV1InventoryDevicesRegistrationFileDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InventoryDevicesRegistrationFileDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/inventory/devices/registration-file-download] GetAPIV1InventoryDevicesRegistrationFileDownload", response, response.Code())
	}
}

// NewGetAPIV1InventoryDevicesRegistrationFileDownloadOK creates a GetAPIV1InventoryDevicesRegistrationFileDownloadOK with default headers values
func NewGetAPIV1InventoryDevicesRegistrationFileDownloadOK() *GetAPIV1InventoryDevicesRegistrationFileDownloadOK {
	return &GetAPIV1InventoryDevicesRegistrationFileDownloadOK{}
}

/*
GetAPIV1InventoryDevicesRegistrationFileDownloadOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1InventoryDevicesRegistrationFileDownloadOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get Api v1 inventory devices registration file download o k response has a 2xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 inventory devices registration file download o k response has a 3xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory devices registration file download o k response has a 4xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory devices registration file download o k response has a 5xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory devices registration file download o k response a status code equal to that given
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 inventory devices registration file download o k response
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) Code() int {
	return 200
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadOK %s", 200, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadOK %s", 200, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest creates a GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest with default headers values
func NewGetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest() *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest {
	return &GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest{}
}

/*
GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory devices registration file download bad request response has a 2xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory devices registration file download bad request response has a 3xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory devices registration file download bad request response has a 4xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory devices registration file download bad request response has a 5xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory devices registration file download bad request response a status code equal to that given
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 inventory devices registration file download bad request response
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadBadRequest %s", 400, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized creates a GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized with default headers values
func NewGetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized() *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized {
	return &GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized{}
}

/*
GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory devices registration file download unauthorized response has a 2xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory devices registration file download unauthorized response has a 3xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory devices registration file download unauthorized response has a 4xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 inventory devices registration file download unauthorized response has a 5xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 inventory devices registration file download unauthorized response a status code equal to that given
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 inventory devices registration file download unauthorized response
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadUnauthorized %s", 401, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError creates a GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError with default headers values
func NewGetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError() *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError {
	return &GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError{}
}

/*
GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 inventory devices registration file download internal server error response has a 2xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 inventory devices registration file download internal server error response has a 3xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 inventory devices registration file download internal server error response has a 4xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 inventory devices registration file download internal server error response has a 5xx status code
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 inventory devices registration file download internal server error response a status code equal to that given
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 inventory devices registration file download internal server error response
func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/inventory/devices/registration-file-download][%d] getApiV1InventoryDevicesRegistrationFileDownloadInternalServerError %s", 500, payload)
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1InventoryDevicesRegistrationFileDownloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
