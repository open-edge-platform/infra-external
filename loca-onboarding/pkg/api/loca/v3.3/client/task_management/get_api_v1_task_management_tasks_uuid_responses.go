// Code generated by go-swagger; DO NOT EDIT.

package task_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1TaskManagementTasksUUIDReader is a Reader for the GetAPIV1TaskManagementTasksUUID structure.
type GetAPIV1TaskManagementTasksUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1TaskManagementTasksUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1TaskManagementTasksUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1TaskManagementTasksUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1TaskManagementTasksUUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1TaskManagementTasksUUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/task-management/tasks/{uuid}] GetAPIV1TaskManagementTasksUUID", response, response.Code())
	}
}

// NewGetAPIV1TaskManagementTasksUUIDOK creates a GetAPIV1TaskManagementTasksUUIDOK with default headers values
func NewGetAPIV1TaskManagementTasksUUIDOK() *GetAPIV1TaskManagementTasksUUIDOK {
	return &GetAPIV1TaskManagementTasksUUIDOK{}
}

/*
GetAPIV1TaskManagementTasksUUIDOK describes a response with status code 200, with default header values.

success
*/
type GetAPIV1TaskManagementTasksUUIDOK struct {
	Payload *model.DtoTaskQryResponse
}

// IsSuccess returns true when this get Api v1 task management tasks Uuid o k response has a 2xx status code
func (o *GetAPIV1TaskManagementTasksUUIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 task management tasks Uuid o k response has a 3xx status code
func (o *GetAPIV1TaskManagementTasksUUIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 task management tasks Uuid o k response has a 4xx status code
func (o *GetAPIV1TaskManagementTasksUUIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 task management tasks Uuid o k response has a 5xx status code
func (o *GetAPIV1TaskManagementTasksUUIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 task management tasks Uuid o k response a status code equal to that given
func (o *GetAPIV1TaskManagementTasksUUIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 task management tasks Uuid o k response
func (o *GetAPIV1TaskManagementTasksUUIDOK) Code() int {
	return 200
}

func (o *GetAPIV1TaskManagementTasksUUIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidOK %s", 200, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidOK %s", 200, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDOK) GetPayload() *model.DtoTaskQryResponse {
	return o.Payload
}

func (o *GetAPIV1TaskManagementTasksUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoTaskQryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1TaskManagementTasksUUIDBadRequest creates a GetAPIV1TaskManagementTasksUUIDBadRequest with default headers values
func NewGetAPIV1TaskManagementTasksUUIDBadRequest() *GetAPIV1TaskManagementTasksUUIDBadRequest {
	return &GetAPIV1TaskManagementTasksUUIDBadRequest{}
}

/*
GetAPIV1TaskManagementTasksUUIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1TaskManagementTasksUUIDBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 task management tasks Uuid bad request response has a 2xx status code
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 task management tasks Uuid bad request response has a 3xx status code
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 task management tasks Uuid bad request response has a 4xx status code
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 task management tasks Uuid bad request response has a 5xx status code
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 task management tasks Uuid bad request response a status code equal to that given
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 task management tasks Uuid bad request response
func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidBadRequest %s", 400, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidBadRequest %s", 400, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1TaskManagementTasksUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1TaskManagementTasksUUIDUnauthorized creates a GetAPIV1TaskManagementTasksUUIDUnauthorized with default headers values
func NewGetAPIV1TaskManagementTasksUUIDUnauthorized() *GetAPIV1TaskManagementTasksUUIDUnauthorized {
	return &GetAPIV1TaskManagementTasksUUIDUnauthorized{}
}

/*
GetAPIV1TaskManagementTasksUUIDUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1TaskManagementTasksUUIDUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 task management tasks Uuid unauthorized response has a 2xx status code
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 task management tasks Uuid unauthorized response has a 3xx status code
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 task management tasks Uuid unauthorized response has a 4xx status code
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 task management tasks Uuid unauthorized response has a 5xx status code
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 task management tasks Uuid unauthorized response a status code equal to that given
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 task management tasks Uuid unauthorized response
func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidUnauthorized %s", 401, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidUnauthorized %s", 401, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1TaskManagementTasksUUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1TaskManagementTasksUUIDInternalServerError creates a GetAPIV1TaskManagementTasksUUIDInternalServerError with default headers values
func NewGetAPIV1TaskManagementTasksUUIDInternalServerError() *GetAPIV1TaskManagementTasksUUIDInternalServerError {
	return &GetAPIV1TaskManagementTasksUUIDInternalServerError{}
}

/*
GetAPIV1TaskManagementTasksUUIDInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1TaskManagementTasksUUIDInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 task management tasks Uuid internal server error response has a 2xx status code
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 task management tasks Uuid internal server error response has a 3xx status code
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 task management tasks Uuid internal server error response has a 4xx status code
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 task management tasks Uuid internal server error response has a 5xx status code
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 task management tasks Uuid internal server error response a status code equal to that given
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 task management tasks Uuid internal server error response
func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidInternalServerError %s", 500, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/task-management/tasks/{uuid}][%d] getApiV1TaskManagementTasksUuidInternalServerError %s", 500, payload)
}

func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1TaskManagementTasksUUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
