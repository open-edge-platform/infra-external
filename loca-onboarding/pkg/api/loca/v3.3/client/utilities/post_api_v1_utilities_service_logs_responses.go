// Code generated by go-swagger; DO NOT EDIT.

package utilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// PostAPIV1UtilitiesServiceLogsReader is a Reader for the PostAPIV1UtilitiesServiceLogs structure.
type PostAPIV1UtilitiesServiceLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1UtilitiesServiceLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAPIV1UtilitiesServiceLogsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1UtilitiesServiceLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/utilities/service-logs] PostAPIV1UtilitiesServiceLogs", response, response.Code())
	}
}

// NewPostAPIV1UtilitiesServiceLogsCreated creates a PostAPIV1UtilitiesServiceLogsCreated with default headers values
func NewPostAPIV1UtilitiesServiceLogsCreated() *PostAPIV1UtilitiesServiceLogsCreated {
	return &PostAPIV1UtilitiesServiceLogsCreated{}
}

/*
PostAPIV1UtilitiesServiceLogsCreated describes a response with status code 201, with default header values.

log file
*/
type PostAPIV1UtilitiesServiceLogsCreated struct {
	Payload *model.DtoFileResponse
}

// IsSuccess returns true when this post Api v1 utilities service logs created response has a 2xx status code
func (o *PostAPIV1UtilitiesServiceLogsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post Api v1 utilities service logs created response has a 3xx status code
func (o *PostAPIV1UtilitiesServiceLogsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 utilities service logs created response has a 4xx status code
func (o *PostAPIV1UtilitiesServiceLogsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post Api v1 utilities service logs created response has a 5xx status code
func (o *PostAPIV1UtilitiesServiceLogsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 utilities service logs created response a status code equal to that given
func (o *PostAPIV1UtilitiesServiceLogsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post Api v1 utilities service logs created response
func (o *PostAPIV1UtilitiesServiceLogsCreated) Code() int {
	return 201
}

func (o *PostAPIV1UtilitiesServiceLogsCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/utilities/service-logs][%d] postApiV1UtilitiesServiceLogsCreated %s", 201, payload)
}

func (o *PostAPIV1UtilitiesServiceLogsCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/utilities/service-logs][%d] postApiV1UtilitiesServiceLogsCreated %s", 201, payload)
}

func (o *PostAPIV1UtilitiesServiceLogsCreated) GetPayload() *model.DtoFileResponse {
	return o.Payload
}

func (o *PostAPIV1UtilitiesServiceLogsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoFileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1UtilitiesServiceLogsBadRequest creates a PostAPIV1UtilitiesServiceLogsBadRequest with default headers values
func NewPostAPIV1UtilitiesServiceLogsBadRequest() *PostAPIV1UtilitiesServiceLogsBadRequest {
	return &PostAPIV1UtilitiesServiceLogsBadRequest{}
}

/*
PostAPIV1UtilitiesServiceLogsBadRequest describes a response with status code 400, with default header values.

auth fail
*/
type PostAPIV1UtilitiesServiceLogsBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this post Api v1 utilities service logs bad request response has a 2xx status code
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post Api v1 utilities service logs bad request response has a 3xx status code
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post Api v1 utilities service logs bad request response has a 4xx status code
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post Api v1 utilities service logs bad request response has a 5xx status code
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post Api v1 utilities service logs bad request response a status code equal to that given
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post Api v1 utilities service logs bad request response
func (o *PostAPIV1UtilitiesServiceLogsBadRequest) Code() int {
	return 400
}

func (o *PostAPIV1UtilitiesServiceLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/utilities/service-logs][%d] postApiV1UtilitiesServiceLogsBadRequest %s", 400, payload)
}

func (o *PostAPIV1UtilitiesServiceLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/utilities/service-logs][%d] postApiV1UtilitiesServiceLogsBadRequest %s", 400, payload)
}

func (o *PostAPIV1UtilitiesServiceLogsBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *PostAPIV1UtilitiesServiceLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
