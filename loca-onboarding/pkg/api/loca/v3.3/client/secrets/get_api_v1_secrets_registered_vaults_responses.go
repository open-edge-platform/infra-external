// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/open-edge-platform/infra-external/loca-onboarding/v2/pkg/api/loca/v3.3/model"
)

// GetAPIV1SecretsRegisteredVaultsReader is a Reader for the GetAPIV1SecretsRegisteredVaults structure.
type GetAPIV1SecretsRegisteredVaultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1SecretsRegisteredVaultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1SecretsRegisteredVaultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1SecretsRegisteredVaultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV1SecretsRegisteredVaultsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1SecretsRegisteredVaultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/secrets/registered-vaults] GetAPIV1SecretsRegisteredVaults", response, response.Code())
	}
}

// NewGetAPIV1SecretsRegisteredVaultsOK creates a GetAPIV1SecretsRegisteredVaultsOK with default headers values
func NewGetAPIV1SecretsRegisteredVaultsOK() *GetAPIV1SecretsRegisteredVaultsOK {
	return &GetAPIV1SecretsRegisteredVaultsOK{}
}

/*
GetAPIV1SecretsRegisteredVaultsOK describes a response with status code 200, with default header values.

list of registered vaults details
*/
type GetAPIV1SecretsRegisteredVaultsOK struct {
	Payload *model.DtoVaultServicesResponse
}

// IsSuccess returns true when this get Api v1 secrets registered vaults o k response has a 2xx status code
func (o *GetAPIV1SecretsRegisteredVaultsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 secrets registered vaults o k response has a 3xx status code
func (o *GetAPIV1SecretsRegisteredVaultsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 secrets registered vaults o k response has a 4xx status code
func (o *GetAPIV1SecretsRegisteredVaultsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 secrets registered vaults o k response has a 5xx status code
func (o *GetAPIV1SecretsRegisteredVaultsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 secrets registered vaults o k response a status code equal to that given
func (o *GetAPIV1SecretsRegisteredVaultsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 secrets registered vaults o k response
func (o *GetAPIV1SecretsRegisteredVaultsOK) Code() int {
	return 200
}

func (o *GetAPIV1SecretsRegisteredVaultsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsOK %s", 200, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsOK %s", 200, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsOK) GetPayload() *model.DtoVaultServicesResponse {
	return o.Payload
}

func (o *GetAPIV1SecretsRegisteredVaultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoVaultServicesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1SecretsRegisteredVaultsBadRequest creates a GetAPIV1SecretsRegisteredVaultsBadRequest with default headers values
func NewGetAPIV1SecretsRegisteredVaultsBadRequest() *GetAPIV1SecretsRegisteredVaultsBadRequest {
	return &GetAPIV1SecretsRegisteredVaultsBadRequest{}
}

/*
GetAPIV1SecretsRegisteredVaultsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAPIV1SecretsRegisteredVaultsBadRequest struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 secrets registered vaults bad request response has a 2xx status code
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 secrets registered vaults bad request response has a 3xx status code
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 secrets registered vaults bad request response has a 4xx status code
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 secrets registered vaults bad request response has a 5xx status code
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 secrets registered vaults bad request response a status code equal to that given
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 secrets registered vaults bad request response
func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsBadRequest %s", 400, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsBadRequest %s", 400, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1SecretsRegisteredVaultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1SecretsRegisteredVaultsUnauthorized creates a GetAPIV1SecretsRegisteredVaultsUnauthorized with default headers values
func NewGetAPIV1SecretsRegisteredVaultsUnauthorized() *GetAPIV1SecretsRegisteredVaultsUnauthorized {
	return &GetAPIV1SecretsRegisteredVaultsUnauthorized{}
}

/*
GetAPIV1SecretsRegisteredVaultsUnauthorized describes a response with status code 401, with default header values.

auth fail
*/
type GetAPIV1SecretsRegisteredVaultsUnauthorized struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 secrets registered vaults unauthorized response has a 2xx status code
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 secrets registered vaults unauthorized response has a 3xx status code
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 secrets registered vaults unauthorized response has a 4xx status code
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 secrets registered vaults unauthorized response has a 5xx status code
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 secrets registered vaults unauthorized response a status code equal to that given
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v1 secrets registered vaults unauthorized response
func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsUnauthorized %s", 401, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsUnauthorized %s", 401, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1SecretsRegisteredVaultsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1SecretsRegisteredVaultsInternalServerError creates a GetAPIV1SecretsRegisteredVaultsInternalServerError with default headers values
func NewGetAPIV1SecretsRegisteredVaultsInternalServerError() *GetAPIV1SecretsRegisteredVaultsInternalServerError {
	return &GetAPIV1SecretsRegisteredVaultsInternalServerError{}
}

/*
GetAPIV1SecretsRegisteredVaultsInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetAPIV1SecretsRegisteredVaultsInternalServerError struct {
	Payload *model.DtoErrResponse
}

// IsSuccess returns true when this get Api v1 secrets registered vaults internal server error response has a 2xx status code
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 secrets registered vaults internal server error response has a 3xx status code
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 secrets registered vaults internal server error response has a 4xx status code
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 secrets registered vaults internal server error response has a 5xx status code
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 secrets registered vaults internal server error response a status code equal to that given
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 secrets registered vaults internal server error response
func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsInternalServerError %s", 500, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/secrets/registered-vaults][%d] getApiV1SecretsRegisteredVaultsInternalServerError %s", 500, payload)
}

func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) GetPayload() *model.DtoErrResponse {
	return o.Payload
}

func (o *GetAPIV1SecretsRegisteredVaultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.DtoErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
