// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: dm-manager.proto

package dm_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for operation type.
type OperationType int32

const (
	OperationType_ACTIVATE   OperationType = 0
	OperationType_DEACTIVATE OperationType = 1
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "ACTIVATE",
		1: "DEACTIVATE",
	}
	OperationType_value = map[string]int32{
		"ACTIVATE":   0,
		"DEACTIVATE": 1,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_dm_manager_proto_enumTypes[0].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_dm_manager_proto_enumTypes[0]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{0}
}

// Enum for AMT status.
type AMTStatus int32

const (
	AMTStatus_UNKNOWN  AMTStatus = 0 // Default value, should not be used
	AMTStatus_ENABLED  AMTStatus = 1 // AMT is enabled
	AMTStatus_DISABLED AMTStatus = 2 // AMT is disabled
)

// Enum value maps for AMTStatus.
var (
	AMTStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	AMTStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x AMTStatus) Enum() *AMTStatus {
	p := new(AMTStatus)
	*p = x
	return p
}

func (x AMTStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AMTStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dm_manager_proto_enumTypes[1].Descriptor()
}

func (AMTStatus) Type() protoreflect.EnumType {
	return &file_dm_manager_proto_enumTypes[1]
}

func (x AMTStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AMTStatus.Descriptor instead.
func (AMTStatus) EnumDescriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{1}
}

// Enum for activation result status.
type ActivationStatus int32

const (
	ActivationStatus_UNSPECIFIED       ActivationStatus = 0 // Default value, should not be used
	ActivationStatus_ACTIVATING        ActivationStatus = 1
	ActivationStatus_ACTIVATED         ActivationStatus = 2
	ActivationStatus_ACTIVATION_FAILED ActivationStatus = 3
)

// Enum value maps for ActivationStatus.
var (
	ActivationStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ACTIVATING",
		2: "ACTIVATED",
		3: "ACTIVATION_FAILED",
	}
	ActivationStatus_value = map[string]int32{
		"UNSPECIFIED":       0,
		"ACTIVATING":        1,
		"ACTIVATED":         2,
		"ACTIVATION_FAILED": 3,
	}
)

func (x ActivationStatus) Enum() *ActivationStatus {
	p := new(ActivationStatus)
	*p = x
	return p
}

func (x ActivationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dm_manager_proto_enumTypes[2].Descriptor()
}

func (ActivationStatus) Type() protoreflect.EnumType {
	return &file_dm_manager_proto_enumTypes[2]
}

func (x ActivationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivationStatus.Descriptor instead.
func (ActivationStatus) EnumDescriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{2}
}

// AMTStatusRequest reports AMT status to dm manager.
type AMTStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId  string    `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`                     // Host identifier
	Status  AMTStatus `protobuf:"varint,2,opt,name=status,proto3,enum=device_management.AMTStatus" json:"status,omitempty"` // AMT status (e.g. Enabled, Disabled)
	Feature string    `protobuf:"bytes,3,opt,name=feature,proto3" json:"feature,omitempty"`                                 // AMT feature
}

func (x *AMTStatusRequest) Reset() {
	*x = AMTStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMTStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMTStatusRequest) ProtoMessage() {}

func (x *AMTStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMTStatusRequest.ProtoReflect.Descriptor instead.
func (*AMTStatusRequest) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{0}
}

func (x *AMTStatusRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *AMTStatusRequest) GetStatus() AMTStatus {
	if x != nil {
		return x.Status
	}
	return AMTStatus_UNKNOWN
}

func (x *AMTStatusRequest) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

type AMTStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AMTStatusResponse) Reset() {
	*x = AMTStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMTStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMTStatusResponse) ProtoMessage() {}

func (x *AMTStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMTStatusResponse.ProtoReflect.Descriptor instead.
func (*AMTStatusResponse) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{1}
}

// ActivationRequest requests for activation details from dm manager.
type ActivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"` // Host identifier
}

func (x *ActivationRequest) Reset() {
	*x = ActivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationRequest) ProtoMessage() {}

func (x *ActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationRequest.ProtoReflect.Descriptor instead.
func (*ActivationRequest) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ActivationRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

// ActivationDetailsResponse reports the activation details to PMA.
type ActivationDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId         string        `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`                               // Host identifier
	Operation      OperationType `protobuf:"varint,2,opt,name=operation,proto3,enum=device_management.OperationType" json:"operation,omitempty"` // Activate or Deactivate
	ProfileName    string        `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`                // Profile name for activation
	ActionPassword string        `protobuf:"bytes,4,opt,name=action_password,json=actionPassword,proto3" json:"action_password,omitempty"`       // Action password for activation
}

func (x *ActivationDetailsResponse) Reset() {
	*x = ActivationDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDetailsResponse) ProtoMessage() {}

func (x *ActivationDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDetailsResponse.ProtoReflect.Descriptor instead.
func (*ActivationDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ActivationDetailsResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *ActivationDetailsResponse) GetOperation() OperationType {
	if x != nil {
		return x.Operation
	}
	return OperationType_ACTIVATE
}

func (x *ActivationDetailsResponse) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ActivationDetailsResponse) GetActionPassword() string {
	if x != nil {
		return x.ActionPassword
	}
	return ""
}

// ActivationResultRequest reports activation results back to dm manager.
type ActivationResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId           string           `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`                                                                        // Host identifier
	ActivationStatus ActivationStatus `protobuf:"varint,2,opt,name=activation_status,json=activationStatus,proto3,enum=device_management.ActivationStatus" json:"activation_status,omitempty"` // Status (e.g., Provisioned, Failed)
	Message          string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                                                                    // Success or Failure message
}

func (x *ActivationResultRequest) Reset() {
	*x = ActivationResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationResultRequest) ProtoMessage() {}

func (x *ActivationResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationResultRequest.ProtoReflect.Descriptor instead.
func (*ActivationResultRequest) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{4}
}

func (x *ActivationResultRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *ActivationResultRequest) GetActivationStatus() ActivationStatus {
	if x != nil {
		return x.ActivationStatus
	}
	return ActivationStatus_UNSPECIFIED
}

func (x *ActivationResultRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivationResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivationResultResponse) Reset() {
	*x = ActivationResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationResultResponse) ProtoMessage() {}

func (x *ActivationResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dm_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationResultResponse.ProtoReflect.Descriptor instead.
func (*ActivationResultResponse) Descriptor() ([]byte, []int) {
	return file_dm_manager_proto_rawDescGZIP(), []int{5}
}

var File_dm_manager_proto protoreflect.FileDescriptor

var file_dm_manager_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x6d, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x10, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a,
	0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x2d, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x09, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x10, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x32, 0xd5, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x4d, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x28,
	0x64, 0x6d, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x6d, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3b, 0x64, 0x6d,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dm_manager_proto_rawDescOnce sync.Once
	file_dm_manager_proto_rawDescData = file_dm_manager_proto_rawDesc
)

func file_dm_manager_proto_rawDescGZIP() []byte {
	file_dm_manager_proto_rawDescOnce.Do(func() {
		file_dm_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_dm_manager_proto_rawDescData)
	})
	return file_dm_manager_proto_rawDescData
}

var file_dm_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dm_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dm_manager_proto_goTypes = []interface{}{
	(OperationType)(0),                // 0: device_management.OperationType
	(AMTStatus)(0),                    // 1: device_management.AMTStatus
	(ActivationStatus)(0),             // 2: device_management.ActivationStatus
	(*AMTStatusRequest)(nil),          // 3: device_management.AMTStatusRequest
	(*AMTStatusResponse)(nil),         // 4: device_management.AMTStatusResponse
	(*ActivationRequest)(nil),         // 5: device_management.ActivationRequest
	(*ActivationDetailsResponse)(nil), // 6: device_management.ActivationDetailsResponse
	(*ActivationResultRequest)(nil),   // 7: device_management.ActivationResultRequest
	(*ActivationResultResponse)(nil),  // 8: device_management.ActivationResultResponse
}
var file_dm_manager_proto_depIdxs = []int32{
	1, // 0: device_management.AMTStatusRequest.status:type_name -> device_management.AMTStatus
	0, // 1: device_management.ActivationDetailsResponse.operation:type_name -> device_management.OperationType
	2, // 2: device_management.ActivationResultRequest.activation_status:type_name -> device_management.ActivationStatus
	3, // 3: device_management.DeviceManagement.ReportAMTStatus:input_type -> device_management.AMTStatusRequest
	5, // 4: device_management.DeviceManagement.RetrieveActivationDetails:input_type -> device_management.ActivationRequest
	7, // 5: device_management.DeviceManagement.ReportActivationResults:input_type -> device_management.ActivationResultRequest
	4, // 6: device_management.DeviceManagement.ReportAMTStatus:output_type -> device_management.AMTStatusResponse
	6, // 7: device_management.DeviceManagement.RetrieveActivationDetails:output_type -> device_management.ActivationDetailsResponse
	8, // 8: device_management.DeviceManagement.ReportActivationResults:output_type -> device_management.ActivationResultResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dm_manager_proto_init() }
func file_dm_manager_proto_init() {
	if File_dm_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dm_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMTStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMTStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dm_manager_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dm_manager_proto_goTypes,
		DependencyIndexes: file_dm_manager_proto_depIdxs,
		EnumInfos:         file_dm_manager_proto_enumTypes,
		MessageInfos:      file_dm_manager_proto_msgTypes,
	}.Build()
	File_dm_manager_proto = out.File
	file_dm_manager_proto_rawDesc = nil
	file_dm_manager_proto_goTypes = nil
	file_dm_manager_proto_depIdxs = nil
}
