// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package device_management;

option go_package = "dm-manager/pkg/api/dm-manager;dm_manager";

// Enum for operation type
enum OperationType {
    ACTIVATE = 0;   
    DEACTIVATE = 1;
}

// Enum for AMT status
enum AMTStatus {
    ENABLED = 0;
    DISABLED = 1;
}

// Enum for activation result status.
enum ActivationStatus {
    PROVISIONED = 0;
    FAILED = 1;
}

// Service for Device Management.
service DeviceManagement {
    // PMA reports AMT status to dm manager.
    rpc ReportAMTStatus(AMTStatusRequest) returns (AMTStatusResponse);

    // DM manager sends activation request to PMA.
    rpc SendActivationRequest(ActivationRequest) returns (ActivationResponse);
}

// AMTStatus Report from PMA to dm manager.
message AMTStatusRequest {
    string host_id = 1;    // Host identifier (e.g., GUID)
    AMTStatus status = 2;  // AMT status (e.g., Enabled, Disabled)
    string version = 3;    // AMT version
}

message AMTStatusResponse {}

// Activation Request from dm manager to PMA.
message ActivationRequest {
    string host_id = 1;          // Host identifier (e.g., GUID)
    OperationType operation = 2; // Activate or Deactivate
    string profile_name = 3;     // Profile name for activation
}

message ActivationResponse {
    string host_id = 1;                     // Host identifier (e.g., GUID)
    ActivationStatus activation_status = 2; // Status (e.g., Provisioned, Failed)
    string message = 3;                     // Success or Failure message
}